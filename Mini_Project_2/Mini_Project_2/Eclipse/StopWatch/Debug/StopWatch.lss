
StopWatch.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001e92  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00001e92  00001f26  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000009  00800068  00800068  00001f2e  2**0
                  ALLOC
  3 .stab         00001140  00000000  00000000  00001f30  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000084e  00000000  00000000  00003070  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  000038be  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  000039fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  00003b6e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  000057b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  000066a2  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  00007450  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  000075b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  0000783d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000800b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 e9 05 	jmp	0xbd2	; 0xbd2 <__vector_1>
       8:	0c 94 05 06 	jmp	0xc0a	; 0xc0a <__vector_2>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 a3 05 	jmp	0xb46	; 0xb46 <__vector_6>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 1a 06 	jmp	0xc34	; 0xc34 <__vector_18>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	a1 37       	cpi	r26, 0x71	; 113
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	10 e0       	ldi	r17, 0x00	; 0
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	e2 e9       	ldi	r30, 0x92	; 146
      78:	fe e1       	ldi	r31, 0x1E	; 30
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 c9 06 	call	0xd92	; 0xd92 <main>
      8a:	0c 94 47 0f 	jmp	0x1e8e	; 0x1e8e <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 10 0f 	jmp	0x1e20	; 0x1e20 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 2c 0f 	jmp	0x1e58	; 0x1e58 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 1c 0f 	jmp	0x1e38	; 0x1e38 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 38 0f 	jmp	0x1e70	; 0x1e70 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 1c 0f 	jmp	0x1e38	; 0x1e38 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 38 0f 	jmp	0x1e70	; 0x1e70 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 10 0f 	jmp	0x1e20	; 0x1e20 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__stack+0x3f>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__stack+0x55>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__stack+0x2d>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__stack+0x3f>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__stack+0x35>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__stack+0x3b>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__stack+0x55>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__stack+0x1c7>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__stack+0x51>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__stack+0x1c7>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__stack+0x67>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__stack+0x1c7>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__stack+0xd3>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__stack+0xc7>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__stack+0xef>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__stack+0x109>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__stack+0x8f>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__stack+0x14d>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__stack+0x141>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__stack+0x11f>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__stack+0x16b>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__stack+0x153>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__stack+0x1ad>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__stack+0x1ad>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__stack+0x1ad>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__stack+0x1b7>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 2c 0f 	jmp	0x1e58	; 0x1e58 <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 1c 0f 	jmp	0x1e38	; 0x1e38 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 38 0f 	jmp	0x1e70	; 0x1e70 <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 1c 0f 	jmp	0x1e38	; 0x1e38 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 38 0f 	jmp	0x1e70	; 0x1e70 <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 1c 0f 	jmp	0x1e38	; 0x1e38 <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 38 0f 	jmp	0x1e70	; 0x1e70 <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 20 0f 	jmp	0x1e40	; 0x1e40 <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 3c 0f 	jmp	0x1e78	; 0x1e78 <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__pack_f+0x178>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__pack_f+0x172>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__pack_f+0x17c>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__pack_f+0x114>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__pack_f+0x76>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__pack_f+0xca>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__pack_f+0x86>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__pack_f+0x7e>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__pack_f+0x9c>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__pack_f+0x94>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__pack_f+0xbe>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__pack_f+0xee>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__pack_f+0xf6>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__pack_f+0xf6>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__pack_f+0x10e>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__pack_f+0x162>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__pack_f+0x172>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__pack_f+0x144>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__pack_f+0x154>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__pack_f+0x14c>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__pack_f+0x162>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__pack_f+0x164>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__pack_f+0x17c>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <__vector_6>:
unsigned char flag=0;
unsigned char flagpause=0;
unsigned char flagresume=0;

ISR(TIMER1_COMPA_vect)
{
     b46:	1f 92       	push	r1
     b48:	0f 92       	push	r0
     b4a:	0f b6       	in	r0, 0x3f	; 63
     b4c:	0f 92       	push	r0
     b4e:	11 24       	eor	r1, r1
     b50:	8f 93       	push	r24
     b52:	df 93       	push	r29
     b54:	cf 93       	push	r28
     b56:	cd b7       	in	r28, 0x3d	; 61
     b58:	de b7       	in	r29, 0x3e	; 62

	flag=1;
     b5a:	81 e0       	ldi	r24, 0x01	; 1
     b5c:	80 93 6e 00 	sts	0x006E, r24
}
     b60:	cf 91       	pop	r28
     b62:	df 91       	pop	r29
     b64:	8f 91       	pop	r24
     b66:	0f 90       	pop	r0
     b68:	0f be       	out	0x3f, r0	; 63
     b6a:	0f 90       	pop	r0
     b6c:	1f 90       	pop	r1
     b6e:	18 95       	reti

00000b70 <Timer1_Init_CTC_Mode>:

void Timer1_Init_CTC_Mode(void)
{
     b70:	df 93       	push	r29
     b72:	cf 93       	push	r28
     b74:	cd b7       	in	r28, 0x3d	; 61
     b76:	de b7       	in	r29, 0x3e	; 62
	TCNT1 = 0;
     b78:	ec e4       	ldi	r30, 0x4C	; 76
     b7a:	f0 e0       	ldi	r31, 0x00	; 0
     b7c:	11 82       	std	Z+1, r1	; 0x01
     b7e:	10 82       	st	Z, r1
	OCR1A=15625;               //setting top value
     b80:	ea e4       	ldi	r30, 0x4A	; 74
     b82:	f0 e0       	ldi	r31, 0x00	; 0
     b84:	89 e0       	ldi	r24, 0x09	; 9
     b86:	9d e3       	ldi	r25, 0x3D	; 61
     b88:	91 83       	std	Z+1, r25	; 0x01
     b8a:	80 83       	st	Z, r24
	TIMSK |= (1<<OCIE1A);
     b8c:	a9 e5       	ldi	r26, 0x59	; 89
     b8e:	b0 e0       	ldi	r27, 0x00	; 0
     b90:	e9 e5       	ldi	r30, 0x59	; 89
     b92:	f0 e0       	ldi	r31, 0x00	; 0
     b94:	80 81       	ld	r24, Z
     b96:	80 61       	ori	r24, 0x10	; 16
     b98:	8c 93       	st	X, r24
	TCCR1A = (1<<FOC1A) | (1<<FOC1B); // Non PWM
     b9a:	ef e4       	ldi	r30, 0x4F	; 79
     b9c:	f0 e0       	ldi	r31, 0x00	; 0
     b9e:	8c e0       	ldi	r24, 0x0C	; 12
     ba0:	80 83       	st	Z, r24
	TCCR1B |= (1 << CS11); //prescalar=64, this prescalar and top value gives a perfect 1 sec with frequency 1MHz
     ba2:	ae e4       	ldi	r26, 0x4E	; 78
     ba4:	b0 e0       	ldi	r27, 0x00	; 0
     ba6:	ee e4       	ldi	r30, 0x4E	; 78
     ba8:	f0 e0       	ldi	r31, 0x00	; 0
     baa:	80 81       	ld	r24, Z
     bac:	82 60       	ori	r24, 0x02	; 2
     bae:	8c 93       	st	X, r24
	TCCR1B |= (1 << CS10);
     bb0:	ae e4       	ldi	r26, 0x4E	; 78
     bb2:	b0 e0       	ldi	r27, 0x00	; 0
     bb4:	ee e4       	ldi	r30, 0x4E	; 78
     bb6:	f0 e0       	ldi	r31, 0x00	; 0
     bb8:	80 81       	ld	r24, Z
     bba:	81 60       	ori	r24, 0x01	; 1
     bbc:	8c 93       	st	X, r24
	TCCR1B |= (1<<WGM12);
     bbe:	ae e4       	ldi	r26, 0x4E	; 78
     bc0:	b0 e0       	ldi	r27, 0x00	; 0
     bc2:	ee e4       	ldi	r30, 0x4E	; 78
     bc4:	f0 e0       	ldi	r31, 0x00	; 0
     bc6:	80 81       	ld	r24, Z
     bc8:	88 60       	ori	r24, 0x08	; 8
     bca:	8c 93       	st	X, r24
}
     bcc:	cf 91       	pop	r28
     bce:	df 91       	pop	r29
     bd0:	08 95       	ret

00000bd2 <__vector_1>:

ISR(INT0_vect)
{
     bd2:	1f 92       	push	r1
     bd4:	0f 92       	push	r0
     bd6:	0f b6       	in	r0, 0x3f	; 63
     bd8:	0f 92       	push	r0
     bda:	11 24       	eor	r1, r1
     bdc:	df 93       	push	r29
     bde:	cf 93       	push	r28
     be0:	cd b7       	in	r28, 0x3d	; 61
     be2:	de b7       	in	r29, 0x3e	; 62
	seccounter1=0;
     be4:	10 92 68 00 	sts	0x0068, r1
	seccounter2=0;
     be8:	10 92 69 00 	sts	0x0069, r1
	mincounter1=0;
     bec:	10 92 6a 00 	sts	0x006A, r1
	mincounter2=0;
     bf0:	10 92 6b 00 	sts	0x006B, r1
	hourcounter1=0;
     bf4:	10 92 6c 00 	sts	0x006C, r1
	hourcounter2=0;
     bf8:	10 92 6d 00 	sts	0x006D, r1
}
     bfc:	cf 91       	pop	r28
     bfe:	df 91       	pop	r29
     c00:	0f 90       	pop	r0
     c02:	0f be       	out	0x3f, r0	; 63
     c04:	0f 90       	pop	r0
     c06:	1f 90       	pop	r1
     c08:	18 95       	reti

00000c0a <__vector_2>:
ISR(INT1_vect)
{
     c0a:	1f 92       	push	r1
     c0c:	0f 92       	push	r0
     c0e:	0f b6       	in	r0, 0x3f	; 63
     c10:	0f 92       	push	r0
     c12:	11 24       	eor	r1, r1
     c14:	8f 93       	push	r24
     c16:	df 93       	push	r29
     c18:	cf 93       	push	r28
     c1a:	cd b7       	in	r28, 0x3d	; 61
     c1c:	de b7       	in	r29, 0x3e	; 62
	flagpause=1;
     c1e:	81 e0       	ldi	r24, 0x01	; 1
     c20:	80 93 6f 00 	sts	0x006F, r24
}
     c24:	cf 91       	pop	r28
     c26:	df 91       	pop	r29
     c28:	8f 91       	pop	r24
     c2a:	0f 90       	pop	r0
     c2c:	0f be       	out	0x3f, r0	; 63
     c2e:	0f 90       	pop	r0
     c30:	1f 90       	pop	r1
     c32:	18 95       	reti

00000c34 <__vector_18>:
ISR(INT2_vect)
{
     c34:	1f 92       	push	r1
     c36:	0f 92       	push	r0
     c38:	0f b6       	in	r0, 0x3f	; 63
     c3a:	0f 92       	push	r0
     c3c:	11 24       	eor	r1, r1
     c3e:	8f 93       	push	r24
     c40:	df 93       	push	r29
     c42:	cf 93       	push	r28
     c44:	cd b7       	in	r28, 0x3d	; 61
     c46:	de b7       	in	r29, 0x3e	; 62
	flagresume=1;
     c48:	81 e0       	ldi	r24, 0x01	; 1
     c4a:	80 93 70 00 	sts	0x0070, r24
}
     c4e:	cf 91       	pop	r28
     c50:	df 91       	pop	r29
     c52:	8f 91       	pop	r24
     c54:	0f 90       	pop	r0
     c56:	0f be       	out	0x3f, r0	; 63
     c58:	0f 90       	pop	r0
     c5a:	1f 90       	pop	r1
     c5c:	18 95       	reti

00000c5e <INT0_Init>:
void INT0_Init(void)
{
     c5e:	df 93       	push	r29
     c60:	cf 93       	push	r28
     c62:	cd b7       	in	r28, 0x3d	; 61
     c64:	de b7       	in	r29, 0x3e	; 62
	SREG  &= ~(1<<7);                   // Disable interrupts by clearing I-bit
     c66:	af e5       	ldi	r26, 0x5F	; 95
     c68:	b0 e0       	ldi	r27, 0x00	; 0
     c6a:	ef e5       	ldi	r30, 0x5F	; 95
     c6c:	f0 e0       	ldi	r31, 0x00	; 0
     c6e:	80 81       	ld	r24, Z
     c70:	8f 77       	andi	r24, 0x7F	; 127
     c72:	8c 93       	st	X, r24
	DDRD  &= (~(1<<PD2));               // Configure INT0/PD2 as input pin
     c74:	a1 e3       	ldi	r26, 0x31	; 49
     c76:	b0 e0       	ldi	r27, 0x00	; 0
     c78:	e1 e3       	ldi	r30, 0x31	; 49
     c7a:	f0 e0       	ldi	r31, 0x00	; 0
     c7c:	80 81       	ld	r24, Z
     c7e:	8b 7f       	andi	r24, 0xFB	; 251
     c80:	8c 93       	st	X, r24
	PORTD |= 0x04;                      //internalresist
     c82:	a2 e3       	ldi	r26, 0x32	; 50
     c84:	b0 e0       	ldi	r27, 0x00	; 0
     c86:	e2 e3       	ldi	r30, 0x32	; 50
     c88:	f0 e0       	ldi	r31, 0x00	; 0
     c8a:	80 81       	ld	r24, Z
     c8c:	84 60       	ori	r24, 0x04	; 4
     c8e:	8c 93       	st	X, r24
	MCUCR &= (~(1<<ISC00));
     c90:	a5 e5       	ldi	r26, 0x55	; 85
     c92:	b0 e0       	ldi	r27, 0x00	; 0
     c94:	e5 e5       	ldi	r30, 0x55	; 85
     c96:	f0 e0       	ldi	r31, 0x00	; 0
     c98:	80 81       	ld	r24, Z
     c9a:	8e 7f       	andi	r24, 0xFE	; 254
     c9c:	8c 93       	st	X, r24
	MCUCR |= (1<<ISC01);      			// Trigger INT0 with the falling edge
     c9e:	a5 e5       	ldi	r26, 0x55	; 85
     ca0:	b0 e0       	ldi	r27, 0x00	; 0
     ca2:	e5 e5       	ldi	r30, 0x55	; 85
     ca4:	f0 e0       	ldi	r31, 0x00	; 0
     ca6:	80 81       	ld	r24, Z
     ca8:	82 60       	ori	r24, 0x02	; 2
     caa:	8c 93       	st	X, r24
	GICR  |= (1<<INT0);                 // Enable external interrupt pin INT0
     cac:	ab e5       	ldi	r26, 0x5B	; 91
     cae:	b0 e0       	ldi	r27, 0x00	; 0
     cb0:	eb e5       	ldi	r30, 0x5B	; 91
     cb2:	f0 e0       	ldi	r31, 0x00	; 0
     cb4:	80 81       	ld	r24, Z
     cb6:	80 64       	ori	r24, 0x40	; 64
     cb8:	8c 93       	st	X, r24
	SREG  |= (1<<7);                    // Enable interrupts by setting I-bit
     cba:	af e5       	ldi	r26, 0x5F	; 95
     cbc:	b0 e0       	ldi	r27, 0x00	; 0
     cbe:	ef e5       	ldi	r30, 0x5F	; 95
     cc0:	f0 e0       	ldi	r31, 0x00	; 0
     cc2:	80 81       	ld	r24, Z
     cc4:	80 68       	ori	r24, 0x80	; 128
     cc6:	8c 93       	st	X, r24
}
     cc8:	cf 91       	pop	r28
     cca:	df 91       	pop	r29
     ccc:	08 95       	ret

00000cce <INT1_Init>:
void INT1_Init(void)
{
     cce:	df 93       	push	r29
     cd0:	cf 93       	push	r28
     cd2:	cd b7       	in	r28, 0x3d	; 61
     cd4:	de b7       	in	r29, 0x3e	; 62
	SREG  &= ~(1<<7);                   // Disable interrupts by clearing I-bit
     cd6:	af e5       	ldi	r26, 0x5F	; 95
     cd8:	b0 e0       	ldi	r27, 0x00	; 0
     cda:	ef e5       	ldi	r30, 0x5F	; 95
     cdc:	f0 e0       	ldi	r31, 0x00	; 0
     cde:	80 81       	ld	r24, Z
     ce0:	8f 77       	andi	r24, 0x7F	; 127
     ce2:	8c 93       	st	X, r24
	DDRD  &= (~(1<<PD3));               // Configure INT0/PD2 as input pin
     ce4:	a1 e3       	ldi	r26, 0x31	; 49
     ce6:	b0 e0       	ldi	r27, 0x00	; 0
     ce8:	e1 e3       	ldi	r30, 0x31	; 49
     cea:	f0 e0       	ldi	r31, 0x00	; 0
     cec:	80 81       	ld	r24, Z
     cee:	87 7f       	andi	r24, 0xF7	; 247
     cf0:	8c 93       	st	X, r24
	MCUCR |= (1<<ISC10);
     cf2:	a5 e5       	ldi	r26, 0x55	; 85
     cf4:	b0 e0       	ldi	r27, 0x00	; 0
     cf6:	e5 e5       	ldi	r30, 0x55	; 85
     cf8:	f0 e0       	ldi	r31, 0x00	; 0
     cfa:	80 81       	ld	r24, Z
     cfc:	84 60       	ori	r24, 0x04	; 4
     cfe:	8c 93       	st	X, r24
	MCUCR |= (1<<ISC11);                // Trigger INT0 with the falling edge
     d00:	a5 e5       	ldi	r26, 0x55	; 85
     d02:	b0 e0       	ldi	r27, 0x00	; 0
     d04:	e5 e5       	ldi	r30, 0x55	; 85
     d06:	f0 e0       	ldi	r31, 0x00	; 0
     d08:	80 81       	ld	r24, Z
     d0a:	88 60       	ori	r24, 0x08	; 8
     d0c:	8c 93       	st	X, r24
	GICR  |= (1<<INT1);                 // Enable external interrupt pin INT1
     d0e:	ab e5       	ldi	r26, 0x5B	; 91
     d10:	b0 e0       	ldi	r27, 0x00	; 0
     d12:	eb e5       	ldi	r30, 0x5B	; 91
     d14:	f0 e0       	ldi	r31, 0x00	; 0
     d16:	80 81       	ld	r24, Z
     d18:	80 68       	ori	r24, 0x80	; 128
     d1a:	8c 93       	st	X, r24
	SREG  |= (1<<7);                    // Enable interrupts by setting I-bit
     d1c:	af e5       	ldi	r26, 0x5F	; 95
     d1e:	b0 e0       	ldi	r27, 0x00	; 0
     d20:	ef e5       	ldi	r30, 0x5F	; 95
     d22:	f0 e0       	ldi	r31, 0x00	; 0
     d24:	80 81       	ld	r24, Z
     d26:	80 68       	ori	r24, 0x80	; 128
     d28:	8c 93       	st	X, r24
}
     d2a:	cf 91       	pop	r28
     d2c:	df 91       	pop	r29
     d2e:	08 95       	ret

00000d30 <INT2_Init>:
void INT2_Init(void)
{
     d30:	df 93       	push	r29
     d32:	cf 93       	push	r28
     d34:	cd b7       	in	r28, 0x3d	; 61
     d36:	de b7       	in	r29, 0x3e	; 62
	SREG  &= ~(1<<7);                   // Disable interrupts by clearing I-bit
     d38:	af e5       	ldi	r26, 0x5F	; 95
     d3a:	b0 e0       	ldi	r27, 0x00	; 0
     d3c:	ef e5       	ldi	r30, 0x5F	; 95
     d3e:	f0 e0       	ldi	r31, 0x00	; 0
     d40:	80 81       	ld	r24, Z
     d42:	8f 77       	andi	r24, 0x7F	; 127
     d44:	8c 93       	st	X, r24
	DDRB  &= (~(1<<PB2));               // Configure INT0/PD2 as input pin
     d46:	a7 e3       	ldi	r26, 0x37	; 55
     d48:	b0 e0       	ldi	r27, 0x00	; 0
     d4a:	e7 e3       	ldi	r30, 0x37	; 55
     d4c:	f0 e0       	ldi	r31, 0x00	; 0
     d4e:	80 81       	ld	r24, Z
     d50:	8b 7f       	andi	r24, 0xFB	; 251
     d52:	8c 93       	st	X, r24
	PORTB |= 0x04; 						//internalresist
     d54:	a8 e3       	ldi	r26, 0x38	; 56
     d56:	b0 e0       	ldi	r27, 0x00	; 0
     d58:	e8 e3       	ldi	r30, 0x38	; 56
     d5a:	f0 e0       	ldi	r31, 0x00	; 0
     d5c:	80 81       	ld	r24, Z
     d5e:	84 60       	ori	r24, 0x04	; 4
     d60:	8c 93       	st	X, r24
	GICR  |= (1<<INT2);                 // Enable external interrupt pin INT2
     d62:	ab e5       	ldi	r26, 0x5B	; 91
     d64:	b0 e0       	ldi	r27, 0x00	; 0
     d66:	eb e5       	ldi	r30, 0x5B	; 91
     d68:	f0 e0       	ldi	r31, 0x00	; 0
     d6a:	80 81       	ld	r24, Z
     d6c:	80 62       	ori	r24, 0x20	; 32
     d6e:	8c 93       	st	X, r24
	MCUCSR &= (~(1<<ISC2));             // Trigger INT0 with the falling edge
     d70:	a4 e5       	ldi	r26, 0x54	; 84
     d72:	b0 e0       	ldi	r27, 0x00	; 0
     d74:	e4 e5       	ldi	r30, 0x54	; 84
     d76:	f0 e0       	ldi	r31, 0x00	; 0
     d78:	80 81       	ld	r24, Z
     d7a:	8f 7b       	andi	r24, 0xBF	; 191
     d7c:	8c 93       	st	X, r24
	SREG  |= (1<<7);                    // Enable interrupts by setting I-bit
     d7e:	af e5       	ldi	r26, 0x5F	; 95
     d80:	b0 e0       	ldi	r27, 0x00	; 0
     d82:	ef e5       	ldi	r30, 0x5F	; 95
     d84:	f0 e0       	ldi	r31, 0x00	; 0
     d86:	80 81       	ld	r24, Z
     d88:	80 68       	ori	r24, 0x80	; 128
     d8a:	8c 93       	st	X, r24
}
     d8c:	cf 91       	pop	r28
     d8e:	df 91       	pop	r29
     d90:	08 95       	ret

00000d92 <main>:
int main(void)
{
     d92:	0f 93       	push	r16
     d94:	1f 93       	push	r17
     d96:	df 93       	push	r29
     d98:	cf 93       	push	r28
     d9a:	cd b7       	in	r28, 0x3d	; 61
     d9c:	de b7       	in	r29, 0x3e	; 62
     d9e:	c8 5a       	subi	r28, 0xA8	; 168
     da0:	d0 40       	sbci	r29, 0x00	; 0
     da2:	0f b6       	in	r0, 0x3f	; 63
     da4:	f8 94       	cli
     da6:	de bf       	out	0x3e, r29	; 62
     da8:	0f be       	out	0x3f, r0	; 63
     daa:	cd bf       	out	0x3d, r28	; 61
	DDRA |= 0x3F; /////////////portA_output
     dac:	aa e3       	ldi	r26, 0x3A	; 58
     dae:	b0 e0       	ldi	r27, 0x00	; 0
     db0:	ea e3       	ldi	r30, 0x3A	; 58
     db2:	f0 e0       	ldi	r31, 0x00	; 0
     db4:	80 81       	ld	r24, Z
     db6:	8f 63       	ori	r24, 0x3F	; 63
     db8:	8c 93       	st	X, r24
	DDRC |= 0x0F;////////////////////portC_output
     dba:	a4 e3       	ldi	r26, 0x34	; 52
     dbc:	b0 e0       	ldi	r27, 0x00	; 0
     dbe:	e4 e3       	ldi	r30, 0x34	; 52
     dc0:	f0 e0       	ldi	r31, 0x00	; 0
     dc2:	80 81       	ld	r24, Z
     dc4:	8f 60       	ori	r24, 0x0F	; 15
     dc6:	8c 93       	st	X, r24
	//////////////////////////
	PORTA = 0x3F;
     dc8:	eb e3       	ldi	r30, 0x3B	; 59
     dca:	f0 e0       	ldi	r31, 0x00	; 0
     dcc:	8f e3       	ldi	r24, 0x3F	; 63
     dce:	80 83       	st	Z, r24
	PORTC &= 0xF0;
     dd0:	a5 e3       	ldi	r26, 0x35	; 53
     dd2:	b0 e0       	ldi	r27, 0x00	; 0
     dd4:	e5 e3       	ldi	r30, 0x35	; 53
     dd6:	f0 e0       	ldi	r31, 0x00	; 0
     dd8:	80 81       	ld	r24, Z
     dda:	80 7f       	andi	r24, 0xF0	; 240
     ddc:	8c 93       	st	X, r24
	///////////////////////////
	SREG |= (1<<7);
     dde:	af e5       	ldi	r26, 0x5F	; 95
     de0:	b0 e0       	ldi	r27, 0x00	; 0
     de2:	ef e5       	ldi	r30, 0x5F	; 95
     de4:	f0 e0       	ldi	r31, 0x00	; 0
     de6:	80 81       	ld	r24, Z
     de8:	80 68       	ori	r24, 0x80	; 128
     dea:	8c 93       	st	X, r24


	INT0_Init();
     dec:	0e 94 2f 06 	call	0xc5e	; 0xc5e <INT0_Init>
	INT1_Init();
     df0:	0e 94 67 06 	call	0xcce	; 0xcce <INT1_Init>
	INT2_Init();
     df4:	0e 94 98 06 	call	0xd30	; 0xd30 <INT2_Init>
	Timer1_Init_CTC_Mode();
     df8:	0e 94 b8 05 	call	0xb70	; 0xb70 <Timer1_Init_CTC_Mode>

    while(1)
    {

    	if(flag==1)
     dfc:	80 91 6e 00 	lds	r24, 0x006E
     e00:	81 30       	cpi	r24, 0x01	; 1
     e02:	09 f0       	breq	.+2      	; 0xe06 <main+0x74>
     e04:	5e c0       	rjmp	.+188    	; 0xec2 <main+0x130>
    	{
    			seccounter1++;
     e06:	80 91 68 00 	lds	r24, 0x0068
     e0a:	8f 5f       	subi	r24, 0xFF	; 255
     e0c:	80 93 68 00 	sts	0x0068, r24
    			if(seccounter1==10)
     e10:	80 91 68 00 	lds	r24, 0x0068
     e14:	8a 30       	cpi	r24, 0x0A	; 10
     e16:	39 f4       	brne	.+14     	; 0xe26 <main+0x94>
    			{
    				seccounter1=0;
     e18:	10 92 68 00 	sts	0x0068, r1
    				seccounter2++;
     e1c:	80 91 69 00 	lds	r24, 0x0069
     e20:	8f 5f       	subi	r24, 0xFF	; 255
     e22:	80 93 69 00 	sts	0x0069, r24
    			}
    			if(seccounter2==6)
     e26:	80 91 69 00 	lds	r24, 0x0069
     e2a:	86 30       	cpi	r24, 0x06	; 6
     e2c:	39 f4       	brne	.+14     	; 0xe3c <main+0xaa>
    			{
    				seccounter2=0;
     e2e:	10 92 69 00 	sts	0x0069, r1
    				mincounter1++;
     e32:	80 91 6a 00 	lds	r24, 0x006A
     e36:	8f 5f       	subi	r24, 0xFF	; 255
     e38:	80 93 6a 00 	sts	0x006A, r24
    			}
    			if(mincounter1==10)
     e3c:	80 91 6a 00 	lds	r24, 0x006A
     e40:	8a 30       	cpi	r24, 0x0A	; 10
     e42:	39 f4       	brne	.+14     	; 0xe52 <main+0xc0>
    			{
    				mincounter1=0;
     e44:	10 92 6a 00 	sts	0x006A, r1
    				mincounter2++;
     e48:	80 91 6b 00 	lds	r24, 0x006B
     e4c:	8f 5f       	subi	r24, 0xFF	; 255
     e4e:	80 93 6b 00 	sts	0x006B, r24
    			}
    			if(mincounter2==6)
     e52:	80 91 6b 00 	lds	r24, 0x006B
     e56:	86 30       	cpi	r24, 0x06	; 6
     e58:	39 f4       	brne	.+14     	; 0xe68 <main+0xd6>
    			{
    				mincounter2=0;
     e5a:	10 92 6b 00 	sts	0x006B, r1
    				hourcounter1++;
     e5e:	80 91 6c 00 	lds	r24, 0x006C
     e62:	8f 5f       	subi	r24, 0xFF	; 255
     e64:	80 93 6c 00 	sts	0x006C, r24
    			}
    			if(hourcounter1==9)
     e68:	80 91 6c 00 	lds	r24, 0x006C
     e6c:	89 30       	cpi	r24, 0x09	; 9
     e6e:	39 f4       	brne	.+14     	; 0xe7e <main+0xec>
    			{
    				hourcounter1=0;
     e70:	10 92 6c 00 	sts	0x006C, r1
    				hourcounter2++;
     e74:	80 91 6d 00 	lds	r24, 0x006D
     e78:	8f 5f       	subi	r24, 0xFF	; 255
     e7a:	80 93 6d 00 	sts	0x006D, r24
    			}
    			if(hourcounter1==4 && hourcounter2==2 && mincounter1==10 && mincounter2==6 && seccounter2==6 && seccounter1==10)
     e7e:	80 91 6c 00 	lds	r24, 0x006C
     e82:	84 30       	cpi	r24, 0x04	; 4
     e84:	d1 f4       	brne	.+52     	; 0xeba <main+0x128>
     e86:	80 91 6d 00 	lds	r24, 0x006D
     e8a:	82 30       	cpi	r24, 0x02	; 2
     e8c:	b1 f4       	brne	.+44     	; 0xeba <main+0x128>
     e8e:	80 91 6a 00 	lds	r24, 0x006A
     e92:	8a 30       	cpi	r24, 0x0A	; 10
     e94:	91 f4       	brne	.+36     	; 0xeba <main+0x128>
     e96:	80 91 6b 00 	lds	r24, 0x006B
     e9a:	86 30       	cpi	r24, 0x06	; 6
     e9c:	71 f4       	brne	.+28     	; 0xeba <main+0x128>
     e9e:	80 91 69 00 	lds	r24, 0x0069
     ea2:	86 30       	cpi	r24, 0x06	; 6
     ea4:	51 f4       	brne	.+20     	; 0xeba <main+0x128>
     ea6:	80 91 68 00 	lds	r24, 0x0068
     eaa:	8a 30       	cpi	r24, 0x0A	; 10
     eac:	31 f4       	brne	.+12     	; 0xeba <main+0x128>
    			{
    				hourcounter1=2;
     eae:	82 e0       	ldi	r24, 0x02	; 2
     eb0:	80 93 6c 00 	sts	0x006C, r24
    				hourcounter2=1;
     eb4:	81 e0       	ldi	r24, 0x01	; 1
     eb6:	80 93 6d 00 	sts	0x006D, r24
    			}
    			flag=0;
     eba:	10 92 6e 00 	sts	0x006E, r1
     ebe:	0c 94 09 0f 	jmp	0x1e12	; 0x1e12 <main+0x1080>
    	}
    	else
    	{
    			PORTA=0x01;
     ec2:	eb e3       	ldi	r30, 0x3B	; 59
     ec4:	f0 e0       	ldi	r31, 0x00	; 0
     ec6:	81 e0       	ldi	r24, 0x01	; 1
     ec8:	80 83       	st	Z, r24
    			PORTC=seccounter1;
     eca:	e5 e3       	ldi	r30, 0x35	; 53
     ecc:	f0 e0       	ldi	r31, 0x00	; 0
     ece:	80 91 68 00 	lds	r24, 0x0068
     ed2:	80 83       	st	Z, r24
     ed4:	fe 01       	movw	r30, r28
     ed6:	eb 55       	subi	r30, 0x5B	; 91
     ed8:	ff 4f       	sbci	r31, 0xFF	; 255
     eda:	80 e0       	ldi	r24, 0x00	; 0
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	a0 e8       	ldi	r26, 0x80	; 128
     ee0:	bf e3       	ldi	r27, 0x3F	; 63
     ee2:	80 83       	st	Z, r24
     ee4:	91 83       	std	Z+1, r25	; 0x01
     ee6:	a2 83       	std	Z+2, r26	; 0x02
     ee8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     eea:	8e 01       	movw	r16, r28
     eec:	0f 55       	subi	r16, 0x5F	; 95
     eee:	1f 4f       	sbci	r17, 0xFF	; 255
     ef0:	fe 01       	movw	r30, r28
     ef2:	eb 55       	subi	r30, 0x5B	; 91
     ef4:	ff 4f       	sbci	r31, 0xFF	; 255
     ef6:	60 81       	ld	r22, Z
     ef8:	71 81       	ldd	r23, Z+1	; 0x01
     efa:	82 81       	ldd	r24, Z+2	; 0x02
     efc:	93 81       	ldd	r25, Z+3	; 0x03
     efe:	20 e0       	ldi	r18, 0x00	; 0
     f00:	30 e0       	ldi	r19, 0x00	; 0
     f02:	4a e7       	ldi	r20, 0x7A	; 122
     f04:	53 e4       	ldi	r21, 0x43	; 67
     f06:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     f0a:	dc 01       	movw	r26, r24
     f0c:	cb 01       	movw	r24, r22
     f0e:	f8 01       	movw	r30, r16
     f10:	80 83       	st	Z, r24
     f12:	91 83       	std	Z+1, r25	; 0x01
     f14:	a2 83       	std	Z+2, r26	; 0x02
     f16:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     f18:	fe 01       	movw	r30, r28
     f1a:	ef 55       	subi	r30, 0x5F	; 95
     f1c:	ff 4f       	sbci	r31, 0xFF	; 255
     f1e:	60 81       	ld	r22, Z
     f20:	71 81       	ldd	r23, Z+1	; 0x01
     f22:	82 81       	ldd	r24, Z+2	; 0x02
     f24:	93 81       	ldd	r25, Z+3	; 0x03
     f26:	20 e0       	ldi	r18, 0x00	; 0
     f28:	30 e0       	ldi	r19, 0x00	; 0
     f2a:	40 e8       	ldi	r20, 0x80	; 128
     f2c:	5f e3       	ldi	r21, 0x3F	; 63
     f2e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     f32:	88 23       	and	r24, r24
     f34:	44 f4       	brge	.+16     	; 0xf46 <main+0x1b4>
		__ticks = 1;
     f36:	fe 01       	movw	r30, r28
     f38:	e1 56       	subi	r30, 0x61	; 97
     f3a:	ff 4f       	sbci	r31, 0xFF	; 255
     f3c:	81 e0       	ldi	r24, 0x01	; 1
     f3e:	90 e0       	ldi	r25, 0x00	; 0
     f40:	91 83       	std	Z+1, r25	; 0x01
     f42:	80 83       	st	Z, r24
     f44:	64 c0       	rjmp	.+200    	; 0x100e <main+0x27c>
	else if (__tmp > 65535)
     f46:	fe 01       	movw	r30, r28
     f48:	ef 55       	subi	r30, 0x5F	; 95
     f4a:	ff 4f       	sbci	r31, 0xFF	; 255
     f4c:	60 81       	ld	r22, Z
     f4e:	71 81       	ldd	r23, Z+1	; 0x01
     f50:	82 81       	ldd	r24, Z+2	; 0x02
     f52:	93 81       	ldd	r25, Z+3	; 0x03
     f54:	20 e0       	ldi	r18, 0x00	; 0
     f56:	3f ef       	ldi	r19, 0xFF	; 255
     f58:	4f e7       	ldi	r20, 0x7F	; 127
     f5a:	57 e4       	ldi	r21, 0x47	; 71
     f5c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     f60:	18 16       	cp	r1, r24
     f62:	0c f0       	brlt	.+2      	; 0xf66 <main+0x1d4>
     f64:	43 c0       	rjmp	.+134    	; 0xfec <main+0x25a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f66:	fe 01       	movw	r30, r28
     f68:	eb 55       	subi	r30, 0x5B	; 91
     f6a:	ff 4f       	sbci	r31, 0xFF	; 255
     f6c:	60 81       	ld	r22, Z
     f6e:	71 81       	ldd	r23, Z+1	; 0x01
     f70:	82 81       	ldd	r24, Z+2	; 0x02
     f72:	93 81       	ldd	r25, Z+3	; 0x03
     f74:	20 e0       	ldi	r18, 0x00	; 0
     f76:	30 e0       	ldi	r19, 0x00	; 0
     f78:	40 e2       	ldi	r20, 0x20	; 32
     f7a:	51 e4       	ldi	r21, 0x41	; 65
     f7c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     f80:	dc 01       	movw	r26, r24
     f82:	cb 01       	movw	r24, r22
     f84:	8e 01       	movw	r16, r28
     f86:	01 56       	subi	r16, 0x61	; 97
     f88:	1f 4f       	sbci	r17, 0xFF	; 255
     f8a:	bc 01       	movw	r22, r24
     f8c:	cd 01       	movw	r24, r26
     f8e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     f92:	dc 01       	movw	r26, r24
     f94:	cb 01       	movw	r24, r22
     f96:	f8 01       	movw	r30, r16
     f98:	91 83       	std	Z+1, r25	; 0x01
     f9a:	80 83       	st	Z, r24
     f9c:	1f c0       	rjmp	.+62     	; 0xfdc <main+0x24a>
     f9e:	fe 01       	movw	r30, r28
     fa0:	e3 56       	subi	r30, 0x63	; 99
     fa2:	ff 4f       	sbci	r31, 0xFF	; 255
     fa4:	89 e1       	ldi	r24, 0x19	; 25
     fa6:	90 e0       	ldi	r25, 0x00	; 0
     fa8:	91 83       	std	Z+1, r25	; 0x01
     faa:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     fac:	fe 01       	movw	r30, r28
     fae:	e3 56       	subi	r30, 0x63	; 99
     fb0:	ff 4f       	sbci	r31, 0xFF	; 255
     fb2:	80 81       	ld	r24, Z
     fb4:	91 81       	ldd	r25, Z+1	; 0x01
     fb6:	01 97       	sbiw	r24, 0x01	; 1
     fb8:	f1 f7       	brne	.-4      	; 0xfb6 <main+0x224>
     fba:	fe 01       	movw	r30, r28
     fbc:	e3 56       	subi	r30, 0x63	; 99
     fbe:	ff 4f       	sbci	r31, 0xFF	; 255
     fc0:	91 83       	std	Z+1, r25	; 0x01
     fc2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fc4:	de 01       	movw	r26, r28
     fc6:	a1 56       	subi	r26, 0x61	; 97
     fc8:	bf 4f       	sbci	r27, 0xFF	; 255
     fca:	fe 01       	movw	r30, r28
     fcc:	e1 56       	subi	r30, 0x61	; 97
     fce:	ff 4f       	sbci	r31, 0xFF	; 255
     fd0:	80 81       	ld	r24, Z
     fd2:	91 81       	ldd	r25, Z+1	; 0x01
     fd4:	01 97       	sbiw	r24, 0x01	; 1
     fd6:	11 96       	adiw	r26, 0x01	; 1
     fd8:	9c 93       	st	X, r25
     fda:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     fdc:	fe 01       	movw	r30, r28
     fde:	e1 56       	subi	r30, 0x61	; 97
     fe0:	ff 4f       	sbci	r31, 0xFF	; 255
     fe2:	80 81       	ld	r24, Z
     fe4:	91 81       	ldd	r25, Z+1	; 0x01
     fe6:	00 97       	sbiw	r24, 0x00	; 0
     fe8:	d1 f6       	brne	.-76     	; 0xf9e <main+0x20c>
     fea:	27 c0       	rjmp	.+78     	; 0x103a <main+0x2a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fec:	8e 01       	movw	r16, r28
     fee:	01 56       	subi	r16, 0x61	; 97
     ff0:	1f 4f       	sbci	r17, 0xFF	; 255
     ff2:	fe 01       	movw	r30, r28
     ff4:	ef 55       	subi	r30, 0x5F	; 95
     ff6:	ff 4f       	sbci	r31, 0xFF	; 255
     ff8:	60 81       	ld	r22, Z
     ffa:	71 81       	ldd	r23, Z+1	; 0x01
     ffc:	82 81       	ldd	r24, Z+2	; 0x02
     ffe:	93 81       	ldd	r25, Z+3	; 0x03
    1000:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1004:	dc 01       	movw	r26, r24
    1006:	cb 01       	movw	r24, r22
    1008:	f8 01       	movw	r30, r16
    100a:	91 83       	std	Z+1, r25	; 0x01
    100c:	80 83       	st	Z, r24
    100e:	de 01       	movw	r26, r28
    1010:	a5 56       	subi	r26, 0x65	; 101
    1012:	bf 4f       	sbci	r27, 0xFF	; 255
    1014:	fe 01       	movw	r30, r28
    1016:	e1 56       	subi	r30, 0x61	; 97
    1018:	ff 4f       	sbci	r31, 0xFF	; 255
    101a:	80 81       	ld	r24, Z
    101c:	91 81       	ldd	r25, Z+1	; 0x01
    101e:	8d 93       	st	X+, r24
    1020:	9c 93       	st	X, r25
    1022:	fe 01       	movw	r30, r28
    1024:	e5 56       	subi	r30, 0x65	; 101
    1026:	ff 4f       	sbci	r31, 0xFF	; 255
    1028:	80 81       	ld	r24, Z
    102a:	91 81       	ldd	r25, Z+1	; 0x01
    102c:	01 97       	sbiw	r24, 0x01	; 1
    102e:	f1 f7       	brne	.-4      	; 0x102c <main+0x29a>
    1030:	fe 01       	movw	r30, r28
    1032:	e5 56       	subi	r30, 0x65	; 101
    1034:	ff 4f       	sbci	r31, 0xFF	; 255
    1036:	91 83       	std	Z+1, r25	; 0x01
    1038:	80 83       	st	Z, r24
    		   	_delay_ms(1);
    		   	PORTA=0x02;
    103a:	eb e3       	ldi	r30, 0x3B	; 59
    103c:	f0 e0       	ldi	r31, 0x00	; 0
    103e:	82 e0       	ldi	r24, 0x02	; 2
    1040:	80 83       	st	Z, r24
    		   	PORTC=seccounter2;
    1042:	e5 e3       	ldi	r30, 0x35	; 53
    1044:	f0 e0       	ldi	r31, 0x00	; 0
    1046:	80 91 69 00 	lds	r24, 0x0069
    104a:	80 83       	st	Z, r24
    104c:	fe 01       	movw	r30, r28
    104e:	e9 56       	subi	r30, 0x69	; 105
    1050:	ff 4f       	sbci	r31, 0xFF	; 255
    1052:	80 e0       	ldi	r24, 0x00	; 0
    1054:	90 e0       	ldi	r25, 0x00	; 0
    1056:	a0 e8       	ldi	r26, 0x80	; 128
    1058:	bf e3       	ldi	r27, 0x3F	; 63
    105a:	80 83       	st	Z, r24
    105c:	91 83       	std	Z+1, r25	; 0x01
    105e:	a2 83       	std	Z+2, r26	; 0x02
    1060:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1062:	8e 01       	movw	r16, r28
    1064:	0d 56       	subi	r16, 0x6D	; 109
    1066:	1f 4f       	sbci	r17, 0xFF	; 255
    1068:	fe 01       	movw	r30, r28
    106a:	e9 56       	subi	r30, 0x69	; 105
    106c:	ff 4f       	sbci	r31, 0xFF	; 255
    106e:	60 81       	ld	r22, Z
    1070:	71 81       	ldd	r23, Z+1	; 0x01
    1072:	82 81       	ldd	r24, Z+2	; 0x02
    1074:	93 81       	ldd	r25, Z+3	; 0x03
    1076:	20 e0       	ldi	r18, 0x00	; 0
    1078:	30 e0       	ldi	r19, 0x00	; 0
    107a:	4a e7       	ldi	r20, 0x7A	; 122
    107c:	53 e4       	ldi	r21, 0x43	; 67
    107e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1082:	dc 01       	movw	r26, r24
    1084:	cb 01       	movw	r24, r22
    1086:	f8 01       	movw	r30, r16
    1088:	80 83       	st	Z, r24
    108a:	91 83       	std	Z+1, r25	; 0x01
    108c:	a2 83       	std	Z+2, r26	; 0x02
    108e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1090:	fe 01       	movw	r30, r28
    1092:	ed 56       	subi	r30, 0x6D	; 109
    1094:	ff 4f       	sbci	r31, 0xFF	; 255
    1096:	60 81       	ld	r22, Z
    1098:	71 81       	ldd	r23, Z+1	; 0x01
    109a:	82 81       	ldd	r24, Z+2	; 0x02
    109c:	93 81       	ldd	r25, Z+3	; 0x03
    109e:	20 e0       	ldi	r18, 0x00	; 0
    10a0:	30 e0       	ldi	r19, 0x00	; 0
    10a2:	40 e8       	ldi	r20, 0x80	; 128
    10a4:	5f e3       	ldi	r21, 0x3F	; 63
    10a6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    10aa:	88 23       	and	r24, r24
    10ac:	44 f4       	brge	.+16     	; 0x10be <main+0x32c>
		__ticks = 1;
    10ae:	fe 01       	movw	r30, r28
    10b0:	ef 56       	subi	r30, 0x6F	; 111
    10b2:	ff 4f       	sbci	r31, 0xFF	; 255
    10b4:	81 e0       	ldi	r24, 0x01	; 1
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	91 83       	std	Z+1, r25	; 0x01
    10ba:	80 83       	st	Z, r24
    10bc:	64 c0       	rjmp	.+200    	; 0x1186 <main+0x3f4>
	else if (__tmp > 65535)
    10be:	fe 01       	movw	r30, r28
    10c0:	ed 56       	subi	r30, 0x6D	; 109
    10c2:	ff 4f       	sbci	r31, 0xFF	; 255
    10c4:	60 81       	ld	r22, Z
    10c6:	71 81       	ldd	r23, Z+1	; 0x01
    10c8:	82 81       	ldd	r24, Z+2	; 0x02
    10ca:	93 81       	ldd	r25, Z+3	; 0x03
    10cc:	20 e0       	ldi	r18, 0x00	; 0
    10ce:	3f ef       	ldi	r19, 0xFF	; 255
    10d0:	4f e7       	ldi	r20, 0x7F	; 127
    10d2:	57 e4       	ldi	r21, 0x47	; 71
    10d4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    10d8:	18 16       	cp	r1, r24
    10da:	0c f0       	brlt	.+2      	; 0x10de <main+0x34c>
    10dc:	43 c0       	rjmp	.+134    	; 0x1164 <main+0x3d2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    10de:	fe 01       	movw	r30, r28
    10e0:	e9 56       	subi	r30, 0x69	; 105
    10e2:	ff 4f       	sbci	r31, 0xFF	; 255
    10e4:	60 81       	ld	r22, Z
    10e6:	71 81       	ldd	r23, Z+1	; 0x01
    10e8:	82 81       	ldd	r24, Z+2	; 0x02
    10ea:	93 81       	ldd	r25, Z+3	; 0x03
    10ec:	20 e0       	ldi	r18, 0x00	; 0
    10ee:	30 e0       	ldi	r19, 0x00	; 0
    10f0:	40 e2       	ldi	r20, 0x20	; 32
    10f2:	51 e4       	ldi	r21, 0x41	; 65
    10f4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    10f8:	dc 01       	movw	r26, r24
    10fa:	cb 01       	movw	r24, r22
    10fc:	8e 01       	movw	r16, r28
    10fe:	0f 56       	subi	r16, 0x6F	; 111
    1100:	1f 4f       	sbci	r17, 0xFF	; 255
    1102:	bc 01       	movw	r22, r24
    1104:	cd 01       	movw	r24, r26
    1106:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    110a:	dc 01       	movw	r26, r24
    110c:	cb 01       	movw	r24, r22
    110e:	f8 01       	movw	r30, r16
    1110:	91 83       	std	Z+1, r25	; 0x01
    1112:	80 83       	st	Z, r24
    1114:	1f c0       	rjmp	.+62     	; 0x1154 <main+0x3c2>
    1116:	fe 01       	movw	r30, r28
    1118:	e1 57       	subi	r30, 0x71	; 113
    111a:	ff 4f       	sbci	r31, 0xFF	; 255
    111c:	89 e1       	ldi	r24, 0x19	; 25
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	91 83       	std	Z+1, r25	; 0x01
    1122:	80 83       	st	Z, r24
    1124:	fe 01       	movw	r30, r28
    1126:	e1 57       	subi	r30, 0x71	; 113
    1128:	ff 4f       	sbci	r31, 0xFF	; 255
    112a:	80 81       	ld	r24, Z
    112c:	91 81       	ldd	r25, Z+1	; 0x01
    112e:	01 97       	sbiw	r24, 0x01	; 1
    1130:	f1 f7       	brne	.-4      	; 0x112e <main+0x39c>
    1132:	fe 01       	movw	r30, r28
    1134:	e1 57       	subi	r30, 0x71	; 113
    1136:	ff 4f       	sbci	r31, 0xFF	; 255
    1138:	91 83       	std	Z+1, r25	; 0x01
    113a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    113c:	de 01       	movw	r26, r28
    113e:	af 56       	subi	r26, 0x6F	; 111
    1140:	bf 4f       	sbci	r27, 0xFF	; 255
    1142:	fe 01       	movw	r30, r28
    1144:	ef 56       	subi	r30, 0x6F	; 111
    1146:	ff 4f       	sbci	r31, 0xFF	; 255
    1148:	80 81       	ld	r24, Z
    114a:	91 81       	ldd	r25, Z+1	; 0x01
    114c:	01 97       	sbiw	r24, 0x01	; 1
    114e:	11 96       	adiw	r26, 0x01	; 1
    1150:	9c 93       	st	X, r25
    1152:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1154:	fe 01       	movw	r30, r28
    1156:	ef 56       	subi	r30, 0x6F	; 111
    1158:	ff 4f       	sbci	r31, 0xFF	; 255
    115a:	80 81       	ld	r24, Z
    115c:	91 81       	ldd	r25, Z+1	; 0x01
    115e:	00 97       	sbiw	r24, 0x00	; 0
    1160:	d1 f6       	brne	.-76     	; 0x1116 <main+0x384>
    1162:	27 c0       	rjmp	.+78     	; 0x11b2 <main+0x420>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1164:	8e 01       	movw	r16, r28
    1166:	0f 56       	subi	r16, 0x6F	; 111
    1168:	1f 4f       	sbci	r17, 0xFF	; 255
    116a:	fe 01       	movw	r30, r28
    116c:	ed 56       	subi	r30, 0x6D	; 109
    116e:	ff 4f       	sbci	r31, 0xFF	; 255
    1170:	60 81       	ld	r22, Z
    1172:	71 81       	ldd	r23, Z+1	; 0x01
    1174:	82 81       	ldd	r24, Z+2	; 0x02
    1176:	93 81       	ldd	r25, Z+3	; 0x03
    1178:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    117c:	dc 01       	movw	r26, r24
    117e:	cb 01       	movw	r24, r22
    1180:	f8 01       	movw	r30, r16
    1182:	91 83       	std	Z+1, r25	; 0x01
    1184:	80 83       	st	Z, r24
    1186:	de 01       	movw	r26, r28
    1188:	a3 57       	subi	r26, 0x73	; 115
    118a:	bf 4f       	sbci	r27, 0xFF	; 255
    118c:	fe 01       	movw	r30, r28
    118e:	ef 56       	subi	r30, 0x6F	; 111
    1190:	ff 4f       	sbci	r31, 0xFF	; 255
    1192:	80 81       	ld	r24, Z
    1194:	91 81       	ldd	r25, Z+1	; 0x01
    1196:	8d 93       	st	X+, r24
    1198:	9c 93       	st	X, r25
    119a:	fe 01       	movw	r30, r28
    119c:	e3 57       	subi	r30, 0x73	; 115
    119e:	ff 4f       	sbci	r31, 0xFF	; 255
    11a0:	80 81       	ld	r24, Z
    11a2:	91 81       	ldd	r25, Z+1	; 0x01
    11a4:	01 97       	sbiw	r24, 0x01	; 1
    11a6:	f1 f7       	brne	.-4      	; 0x11a4 <main+0x412>
    11a8:	fe 01       	movw	r30, r28
    11aa:	e3 57       	subi	r30, 0x73	; 115
    11ac:	ff 4f       	sbci	r31, 0xFF	; 255
    11ae:	91 83       	std	Z+1, r25	; 0x01
    11b0:	80 83       	st	Z, r24
    		   	_delay_ms(1);
    	       	PORTA=0x04;
    11b2:	eb e3       	ldi	r30, 0x3B	; 59
    11b4:	f0 e0       	ldi	r31, 0x00	; 0
    11b6:	84 e0       	ldi	r24, 0x04	; 4
    11b8:	80 83       	st	Z, r24
    	       	PORTC=mincounter1;
    11ba:	e5 e3       	ldi	r30, 0x35	; 53
    11bc:	f0 e0       	ldi	r31, 0x00	; 0
    11be:	80 91 6a 00 	lds	r24, 0x006A
    11c2:	80 83       	st	Z, r24
    11c4:	fe 01       	movw	r30, r28
    11c6:	e7 57       	subi	r30, 0x77	; 119
    11c8:	ff 4f       	sbci	r31, 0xFF	; 255
    11ca:	80 e0       	ldi	r24, 0x00	; 0
    11cc:	90 e0       	ldi	r25, 0x00	; 0
    11ce:	a0 e8       	ldi	r26, 0x80	; 128
    11d0:	bf e3       	ldi	r27, 0x3F	; 63
    11d2:	80 83       	st	Z, r24
    11d4:	91 83       	std	Z+1, r25	; 0x01
    11d6:	a2 83       	std	Z+2, r26	; 0x02
    11d8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    11da:	8e 01       	movw	r16, r28
    11dc:	0b 57       	subi	r16, 0x7B	; 123
    11de:	1f 4f       	sbci	r17, 0xFF	; 255
    11e0:	fe 01       	movw	r30, r28
    11e2:	e7 57       	subi	r30, 0x77	; 119
    11e4:	ff 4f       	sbci	r31, 0xFF	; 255
    11e6:	60 81       	ld	r22, Z
    11e8:	71 81       	ldd	r23, Z+1	; 0x01
    11ea:	82 81       	ldd	r24, Z+2	; 0x02
    11ec:	93 81       	ldd	r25, Z+3	; 0x03
    11ee:	20 e0       	ldi	r18, 0x00	; 0
    11f0:	30 e0       	ldi	r19, 0x00	; 0
    11f2:	4a e7       	ldi	r20, 0x7A	; 122
    11f4:	53 e4       	ldi	r21, 0x43	; 67
    11f6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    11fa:	dc 01       	movw	r26, r24
    11fc:	cb 01       	movw	r24, r22
    11fe:	f8 01       	movw	r30, r16
    1200:	80 83       	st	Z, r24
    1202:	91 83       	std	Z+1, r25	; 0x01
    1204:	a2 83       	std	Z+2, r26	; 0x02
    1206:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1208:	fe 01       	movw	r30, r28
    120a:	eb 57       	subi	r30, 0x7B	; 123
    120c:	ff 4f       	sbci	r31, 0xFF	; 255
    120e:	60 81       	ld	r22, Z
    1210:	71 81       	ldd	r23, Z+1	; 0x01
    1212:	82 81       	ldd	r24, Z+2	; 0x02
    1214:	93 81       	ldd	r25, Z+3	; 0x03
    1216:	20 e0       	ldi	r18, 0x00	; 0
    1218:	30 e0       	ldi	r19, 0x00	; 0
    121a:	40 e8       	ldi	r20, 0x80	; 128
    121c:	5f e3       	ldi	r21, 0x3F	; 63
    121e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1222:	88 23       	and	r24, r24
    1224:	44 f4       	brge	.+16     	; 0x1236 <main+0x4a4>
		__ticks = 1;
    1226:	fe 01       	movw	r30, r28
    1228:	ed 57       	subi	r30, 0x7D	; 125
    122a:	ff 4f       	sbci	r31, 0xFF	; 255
    122c:	81 e0       	ldi	r24, 0x01	; 1
    122e:	90 e0       	ldi	r25, 0x00	; 0
    1230:	91 83       	std	Z+1, r25	; 0x01
    1232:	80 83       	st	Z, r24
    1234:	64 c0       	rjmp	.+200    	; 0x12fe <main+0x56c>
	else if (__tmp > 65535)
    1236:	fe 01       	movw	r30, r28
    1238:	eb 57       	subi	r30, 0x7B	; 123
    123a:	ff 4f       	sbci	r31, 0xFF	; 255
    123c:	60 81       	ld	r22, Z
    123e:	71 81       	ldd	r23, Z+1	; 0x01
    1240:	82 81       	ldd	r24, Z+2	; 0x02
    1242:	93 81       	ldd	r25, Z+3	; 0x03
    1244:	20 e0       	ldi	r18, 0x00	; 0
    1246:	3f ef       	ldi	r19, 0xFF	; 255
    1248:	4f e7       	ldi	r20, 0x7F	; 127
    124a:	57 e4       	ldi	r21, 0x47	; 71
    124c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1250:	18 16       	cp	r1, r24
    1252:	0c f0       	brlt	.+2      	; 0x1256 <main+0x4c4>
    1254:	43 c0       	rjmp	.+134    	; 0x12dc <main+0x54a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1256:	fe 01       	movw	r30, r28
    1258:	e7 57       	subi	r30, 0x77	; 119
    125a:	ff 4f       	sbci	r31, 0xFF	; 255
    125c:	60 81       	ld	r22, Z
    125e:	71 81       	ldd	r23, Z+1	; 0x01
    1260:	82 81       	ldd	r24, Z+2	; 0x02
    1262:	93 81       	ldd	r25, Z+3	; 0x03
    1264:	20 e0       	ldi	r18, 0x00	; 0
    1266:	30 e0       	ldi	r19, 0x00	; 0
    1268:	40 e2       	ldi	r20, 0x20	; 32
    126a:	51 e4       	ldi	r21, 0x41	; 65
    126c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1270:	dc 01       	movw	r26, r24
    1272:	cb 01       	movw	r24, r22
    1274:	8e 01       	movw	r16, r28
    1276:	0d 57       	subi	r16, 0x7D	; 125
    1278:	1f 4f       	sbci	r17, 0xFF	; 255
    127a:	bc 01       	movw	r22, r24
    127c:	cd 01       	movw	r24, r26
    127e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1282:	dc 01       	movw	r26, r24
    1284:	cb 01       	movw	r24, r22
    1286:	f8 01       	movw	r30, r16
    1288:	91 83       	std	Z+1, r25	; 0x01
    128a:	80 83       	st	Z, r24
    128c:	1f c0       	rjmp	.+62     	; 0x12cc <main+0x53a>
    128e:	fe 01       	movw	r30, r28
    1290:	ef 57       	subi	r30, 0x7F	; 127
    1292:	ff 4f       	sbci	r31, 0xFF	; 255
    1294:	89 e1       	ldi	r24, 0x19	; 25
    1296:	90 e0       	ldi	r25, 0x00	; 0
    1298:	91 83       	std	Z+1, r25	; 0x01
    129a:	80 83       	st	Z, r24
    129c:	fe 01       	movw	r30, r28
    129e:	ef 57       	subi	r30, 0x7F	; 127
    12a0:	ff 4f       	sbci	r31, 0xFF	; 255
    12a2:	80 81       	ld	r24, Z
    12a4:	91 81       	ldd	r25, Z+1	; 0x01
    12a6:	01 97       	sbiw	r24, 0x01	; 1
    12a8:	f1 f7       	brne	.-4      	; 0x12a6 <main+0x514>
    12aa:	fe 01       	movw	r30, r28
    12ac:	ef 57       	subi	r30, 0x7F	; 127
    12ae:	ff 4f       	sbci	r31, 0xFF	; 255
    12b0:	91 83       	std	Z+1, r25	; 0x01
    12b2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12b4:	de 01       	movw	r26, r28
    12b6:	ad 57       	subi	r26, 0x7D	; 125
    12b8:	bf 4f       	sbci	r27, 0xFF	; 255
    12ba:	fe 01       	movw	r30, r28
    12bc:	ed 57       	subi	r30, 0x7D	; 125
    12be:	ff 4f       	sbci	r31, 0xFF	; 255
    12c0:	80 81       	ld	r24, Z
    12c2:	91 81       	ldd	r25, Z+1	; 0x01
    12c4:	01 97       	sbiw	r24, 0x01	; 1
    12c6:	11 96       	adiw	r26, 0x01	; 1
    12c8:	9c 93       	st	X, r25
    12ca:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12cc:	fe 01       	movw	r30, r28
    12ce:	ed 57       	subi	r30, 0x7D	; 125
    12d0:	ff 4f       	sbci	r31, 0xFF	; 255
    12d2:	80 81       	ld	r24, Z
    12d4:	91 81       	ldd	r25, Z+1	; 0x01
    12d6:	00 97       	sbiw	r24, 0x00	; 0
    12d8:	d1 f6       	brne	.-76     	; 0x128e <main+0x4fc>
    12da:	27 c0       	rjmp	.+78     	; 0x132a <main+0x598>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    12dc:	8e 01       	movw	r16, r28
    12de:	0d 57       	subi	r16, 0x7D	; 125
    12e0:	1f 4f       	sbci	r17, 0xFF	; 255
    12e2:	fe 01       	movw	r30, r28
    12e4:	eb 57       	subi	r30, 0x7B	; 123
    12e6:	ff 4f       	sbci	r31, 0xFF	; 255
    12e8:	60 81       	ld	r22, Z
    12ea:	71 81       	ldd	r23, Z+1	; 0x01
    12ec:	82 81       	ldd	r24, Z+2	; 0x02
    12ee:	93 81       	ldd	r25, Z+3	; 0x03
    12f0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    12f4:	dc 01       	movw	r26, r24
    12f6:	cb 01       	movw	r24, r22
    12f8:	f8 01       	movw	r30, r16
    12fa:	91 83       	std	Z+1, r25	; 0x01
    12fc:	80 83       	st	Z, r24
    12fe:	de 01       	movw	r26, r28
    1300:	a1 58       	subi	r26, 0x81	; 129
    1302:	bf 4f       	sbci	r27, 0xFF	; 255
    1304:	fe 01       	movw	r30, r28
    1306:	ed 57       	subi	r30, 0x7D	; 125
    1308:	ff 4f       	sbci	r31, 0xFF	; 255
    130a:	80 81       	ld	r24, Z
    130c:	91 81       	ldd	r25, Z+1	; 0x01
    130e:	8d 93       	st	X+, r24
    1310:	9c 93       	st	X, r25
    1312:	fe 01       	movw	r30, r28
    1314:	e1 58       	subi	r30, 0x81	; 129
    1316:	ff 4f       	sbci	r31, 0xFF	; 255
    1318:	80 81       	ld	r24, Z
    131a:	91 81       	ldd	r25, Z+1	; 0x01
    131c:	01 97       	sbiw	r24, 0x01	; 1
    131e:	f1 f7       	brne	.-4      	; 0x131c <main+0x58a>
    1320:	fe 01       	movw	r30, r28
    1322:	e1 58       	subi	r30, 0x81	; 129
    1324:	ff 4f       	sbci	r31, 0xFF	; 255
    1326:	91 83       	std	Z+1, r25	; 0x01
    1328:	80 83       	st	Z, r24
   		      	_delay_ms(1);
   		    	PORTA=0x08;
    132a:	eb e3       	ldi	r30, 0x3B	; 59
    132c:	f0 e0       	ldi	r31, 0x00	; 0
    132e:	88 e0       	ldi	r24, 0x08	; 8
    1330:	80 83       	st	Z, r24
   		    	PORTC=mincounter2;
    1332:	e5 e3       	ldi	r30, 0x35	; 53
    1334:	f0 e0       	ldi	r31, 0x00	; 0
    1336:	80 91 6b 00 	lds	r24, 0x006B
    133a:	80 83       	st	Z, r24
    133c:	fe 01       	movw	r30, r28
    133e:	e5 58       	subi	r30, 0x85	; 133
    1340:	ff 4f       	sbci	r31, 0xFF	; 255
    1342:	80 e0       	ldi	r24, 0x00	; 0
    1344:	90 e0       	ldi	r25, 0x00	; 0
    1346:	a0 e8       	ldi	r26, 0x80	; 128
    1348:	bf e3       	ldi	r27, 0x3F	; 63
    134a:	80 83       	st	Z, r24
    134c:	91 83       	std	Z+1, r25	; 0x01
    134e:	a2 83       	std	Z+2, r26	; 0x02
    1350:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1352:	8e 01       	movw	r16, r28
    1354:	09 58       	subi	r16, 0x89	; 137
    1356:	1f 4f       	sbci	r17, 0xFF	; 255
    1358:	fe 01       	movw	r30, r28
    135a:	e5 58       	subi	r30, 0x85	; 133
    135c:	ff 4f       	sbci	r31, 0xFF	; 255
    135e:	60 81       	ld	r22, Z
    1360:	71 81       	ldd	r23, Z+1	; 0x01
    1362:	82 81       	ldd	r24, Z+2	; 0x02
    1364:	93 81       	ldd	r25, Z+3	; 0x03
    1366:	20 e0       	ldi	r18, 0x00	; 0
    1368:	30 e0       	ldi	r19, 0x00	; 0
    136a:	4a e7       	ldi	r20, 0x7A	; 122
    136c:	53 e4       	ldi	r21, 0x43	; 67
    136e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1372:	dc 01       	movw	r26, r24
    1374:	cb 01       	movw	r24, r22
    1376:	f8 01       	movw	r30, r16
    1378:	80 83       	st	Z, r24
    137a:	91 83       	std	Z+1, r25	; 0x01
    137c:	a2 83       	std	Z+2, r26	; 0x02
    137e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1380:	fe 01       	movw	r30, r28
    1382:	e9 58       	subi	r30, 0x89	; 137
    1384:	ff 4f       	sbci	r31, 0xFF	; 255
    1386:	60 81       	ld	r22, Z
    1388:	71 81       	ldd	r23, Z+1	; 0x01
    138a:	82 81       	ldd	r24, Z+2	; 0x02
    138c:	93 81       	ldd	r25, Z+3	; 0x03
    138e:	20 e0       	ldi	r18, 0x00	; 0
    1390:	30 e0       	ldi	r19, 0x00	; 0
    1392:	40 e8       	ldi	r20, 0x80	; 128
    1394:	5f e3       	ldi	r21, 0x3F	; 63
    1396:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    139a:	88 23       	and	r24, r24
    139c:	44 f4       	brge	.+16     	; 0x13ae <main+0x61c>
		__ticks = 1;
    139e:	fe 01       	movw	r30, r28
    13a0:	eb 58       	subi	r30, 0x8B	; 139
    13a2:	ff 4f       	sbci	r31, 0xFF	; 255
    13a4:	81 e0       	ldi	r24, 0x01	; 1
    13a6:	90 e0       	ldi	r25, 0x00	; 0
    13a8:	91 83       	std	Z+1, r25	; 0x01
    13aa:	80 83       	st	Z, r24
    13ac:	64 c0       	rjmp	.+200    	; 0x1476 <main+0x6e4>
	else if (__tmp > 65535)
    13ae:	fe 01       	movw	r30, r28
    13b0:	e9 58       	subi	r30, 0x89	; 137
    13b2:	ff 4f       	sbci	r31, 0xFF	; 255
    13b4:	60 81       	ld	r22, Z
    13b6:	71 81       	ldd	r23, Z+1	; 0x01
    13b8:	82 81       	ldd	r24, Z+2	; 0x02
    13ba:	93 81       	ldd	r25, Z+3	; 0x03
    13bc:	20 e0       	ldi	r18, 0x00	; 0
    13be:	3f ef       	ldi	r19, 0xFF	; 255
    13c0:	4f e7       	ldi	r20, 0x7F	; 127
    13c2:	57 e4       	ldi	r21, 0x47	; 71
    13c4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    13c8:	18 16       	cp	r1, r24
    13ca:	0c f0       	brlt	.+2      	; 0x13ce <main+0x63c>
    13cc:	43 c0       	rjmp	.+134    	; 0x1454 <main+0x6c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13ce:	fe 01       	movw	r30, r28
    13d0:	e5 58       	subi	r30, 0x85	; 133
    13d2:	ff 4f       	sbci	r31, 0xFF	; 255
    13d4:	60 81       	ld	r22, Z
    13d6:	71 81       	ldd	r23, Z+1	; 0x01
    13d8:	82 81       	ldd	r24, Z+2	; 0x02
    13da:	93 81       	ldd	r25, Z+3	; 0x03
    13dc:	20 e0       	ldi	r18, 0x00	; 0
    13de:	30 e0       	ldi	r19, 0x00	; 0
    13e0:	40 e2       	ldi	r20, 0x20	; 32
    13e2:	51 e4       	ldi	r21, 0x41	; 65
    13e4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    13e8:	dc 01       	movw	r26, r24
    13ea:	cb 01       	movw	r24, r22
    13ec:	8e 01       	movw	r16, r28
    13ee:	0b 58       	subi	r16, 0x8B	; 139
    13f0:	1f 4f       	sbci	r17, 0xFF	; 255
    13f2:	bc 01       	movw	r22, r24
    13f4:	cd 01       	movw	r24, r26
    13f6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    13fa:	dc 01       	movw	r26, r24
    13fc:	cb 01       	movw	r24, r22
    13fe:	f8 01       	movw	r30, r16
    1400:	91 83       	std	Z+1, r25	; 0x01
    1402:	80 83       	st	Z, r24
    1404:	1f c0       	rjmp	.+62     	; 0x1444 <main+0x6b2>
    1406:	fe 01       	movw	r30, r28
    1408:	ed 58       	subi	r30, 0x8D	; 141
    140a:	ff 4f       	sbci	r31, 0xFF	; 255
    140c:	89 e1       	ldi	r24, 0x19	; 25
    140e:	90 e0       	ldi	r25, 0x00	; 0
    1410:	91 83       	std	Z+1, r25	; 0x01
    1412:	80 83       	st	Z, r24
    1414:	fe 01       	movw	r30, r28
    1416:	ed 58       	subi	r30, 0x8D	; 141
    1418:	ff 4f       	sbci	r31, 0xFF	; 255
    141a:	80 81       	ld	r24, Z
    141c:	91 81       	ldd	r25, Z+1	; 0x01
    141e:	01 97       	sbiw	r24, 0x01	; 1
    1420:	f1 f7       	brne	.-4      	; 0x141e <main+0x68c>
    1422:	fe 01       	movw	r30, r28
    1424:	ed 58       	subi	r30, 0x8D	; 141
    1426:	ff 4f       	sbci	r31, 0xFF	; 255
    1428:	91 83       	std	Z+1, r25	; 0x01
    142a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    142c:	de 01       	movw	r26, r28
    142e:	ab 58       	subi	r26, 0x8B	; 139
    1430:	bf 4f       	sbci	r27, 0xFF	; 255
    1432:	fe 01       	movw	r30, r28
    1434:	eb 58       	subi	r30, 0x8B	; 139
    1436:	ff 4f       	sbci	r31, 0xFF	; 255
    1438:	80 81       	ld	r24, Z
    143a:	91 81       	ldd	r25, Z+1	; 0x01
    143c:	01 97       	sbiw	r24, 0x01	; 1
    143e:	11 96       	adiw	r26, 0x01	; 1
    1440:	9c 93       	st	X, r25
    1442:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1444:	fe 01       	movw	r30, r28
    1446:	eb 58       	subi	r30, 0x8B	; 139
    1448:	ff 4f       	sbci	r31, 0xFF	; 255
    144a:	80 81       	ld	r24, Z
    144c:	91 81       	ldd	r25, Z+1	; 0x01
    144e:	00 97       	sbiw	r24, 0x00	; 0
    1450:	d1 f6       	brne	.-76     	; 0x1406 <main+0x674>
    1452:	27 c0       	rjmp	.+78     	; 0x14a2 <main+0x710>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1454:	8e 01       	movw	r16, r28
    1456:	0b 58       	subi	r16, 0x8B	; 139
    1458:	1f 4f       	sbci	r17, 0xFF	; 255
    145a:	fe 01       	movw	r30, r28
    145c:	e9 58       	subi	r30, 0x89	; 137
    145e:	ff 4f       	sbci	r31, 0xFF	; 255
    1460:	60 81       	ld	r22, Z
    1462:	71 81       	ldd	r23, Z+1	; 0x01
    1464:	82 81       	ldd	r24, Z+2	; 0x02
    1466:	93 81       	ldd	r25, Z+3	; 0x03
    1468:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    146c:	dc 01       	movw	r26, r24
    146e:	cb 01       	movw	r24, r22
    1470:	f8 01       	movw	r30, r16
    1472:	91 83       	std	Z+1, r25	; 0x01
    1474:	80 83       	st	Z, r24
    1476:	de 01       	movw	r26, r28
    1478:	af 58       	subi	r26, 0x8F	; 143
    147a:	bf 4f       	sbci	r27, 0xFF	; 255
    147c:	fe 01       	movw	r30, r28
    147e:	eb 58       	subi	r30, 0x8B	; 139
    1480:	ff 4f       	sbci	r31, 0xFF	; 255
    1482:	80 81       	ld	r24, Z
    1484:	91 81       	ldd	r25, Z+1	; 0x01
    1486:	8d 93       	st	X+, r24
    1488:	9c 93       	st	X, r25
    148a:	fe 01       	movw	r30, r28
    148c:	ef 58       	subi	r30, 0x8F	; 143
    148e:	ff 4f       	sbci	r31, 0xFF	; 255
    1490:	80 81       	ld	r24, Z
    1492:	91 81       	ldd	r25, Z+1	; 0x01
    1494:	01 97       	sbiw	r24, 0x01	; 1
    1496:	f1 f7       	brne	.-4      	; 0x1494 <main+0x702>
    1498:	fe 01       	movw	r30, r28
    149a:	ef 58       	subi	r30, 0x8F	; 143
    149c:	ff 4f       	sbci	r31, 0xFF	; 255
    149e:	91 83       	std	Z+1, r25	; 0x01
    14a0:	80 83       	st	Z, r24
   		    	_delay_ms(1);
   		    	PORTA=0x10;
    14a2:	eb e3       	ldi	r30, 0x3B	; 59
    14a4:	f0 e0       	ldi	r31, 0x00	; 0
    14a6:	80 e1       	ldi	r24, 0x10	; 16
    14a8:	80 83       	st	Z, r24
   		    	PORTC=hourcounter1;
    14aa:	e5 e3       	ldi	r30, 0x35	; 53
    14ac:	f0 e0       	ldi	r31, 0x00	; 0
    14ae:	80 91 6c 00 	lds	r24, 0x006C
    14b2:	80 83       	st	Z, r24
    14b4:	fe 01       	movw	r30, r28
    14b6:	e3 59       	subi	r30, 0x93	; 147
    14b8:	ff 4f       	sbci	r31, 0xFF	; 255
    14ba:	80 e0       	ldi	r24, 0x00	; 0
    14bc:	90 e0       	ldi	r25, 0x00	; 0
    14be:	a0 e8       	ldi	r26, 0x80	; 128
    14c0:	bf e3       	ldi	r27, 0x3F	; 63
    14c2:	80 83       	st	Z, r24
    14c4:	91 83       	std	Z+1, r25	; 0x01
    14c6:	a2 83       	std	Z+2, r26	; 0x02
    14c8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14ca:	8e 01       	movw	r16, r28
    14cc:	07 59       	subi	r16, 0x97	; 151
    14ce:	1f 4f       	sbci	r17, 0xFF	; 255
    14d0:	fe 01       	movw	r30, r28
    14d2:	e3 59       	subi	r30, 0x93	; 147
    14d4:	ff 4f       	sbci	r31, 0xFF	; 255
    14d6:	60 81       	ld	r22, Z
    14d8:	71 81       	ldd	r23, Z+1	; 0x01
    14da:	82 81       	ldd	r24, Z+2	; 0x02
    14dc:	93 81       	ldd	r25, Z+3	; 0x03
    14de:	20 e0       	ldi	r18, 0x00	; 0
    14e0:	30 e0       	ldi	r19, 0x00	; 0
    14e2:	4a e7       	ldi	r20, 0x7A	; 122
    14e4:	53 e4       	ldi	r21, 0x43	; 67
    14e6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    14ea:	dc 01       	movw	r26, r24
    14ec:	cb 01       	movw	r24, r22
    14ee:	f8 01       	movw	r30, r16
    14f0:	80 83       	st	Z, r24
    14f2:	91 83       	std	Z+1, r25	; 0x01
    14f4:	a2 83       	std	Z+2, r26	; 0x02
    14f6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    14f8:	fe 01       	movw	r30, r28
    14fa:	e7 59       	subi	r30, 0x97	; 151
    14fc:	ff 4f       	sbci	r31, 0xFF	; 255
    14fe:	60 81       	ld	r22, Z
    1500:	71 81       	ldd	r23, Z+1	; 0x01
    1502:	82 81       	ldd	r24, Z+2	; 0x02
    1504:	93 81       	ldd	r25, Z+3	; 0x03
    1506:	20 e0       	ldi	r18, 0x00	; 0
    1508:	30 e0       	ldi	r19, 0x00	; 0
    150a:	40 e8       	ldi	r20, 0x80	; 128
    150c:	5f e3       	ldi	r21, 0x3F	; 63
    150e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1512:	88 23       	and	r24, r24
    1514:	44 f4       	brge	.+16     	; 0x1526 <main+0x794>
		__ticks = 1;
    1516:	fe 01       	movw	r30, r28
    1518:	e9 59       	subi	r30, 0x99	; 153
    151a:	ff 4f       	sbci	r31, 0xFF	; 255
    151c:	81 e0       	ldi	r24, 0x01	; 1
    151e:	90 e0       	ldi	r25, 0x00	; 0
    1520:	91 83       	std	Z+1, r25	; 0x01
    1522:	80 83       	st	Z, r24
    1524:	64 c0       	rjmp	.+200    	; 0x15ee <main+0x85c>
	else if (__tmp > 65535)
    1526:	fe 01       	movw	r30, r28
    1528:	e7 59       	subi	r30, 0x97	; 151
    152a:	ff 4f       	sbci	r31, 0xFF	; 255
    152c:	60 81       	ld	r22, Z
    152e:	71 81       	ldd	r23, Z+1	; 0x01
    1530:	82 81       	ldd	r24, Z+2	; 0x02
    1532:	93 81       	ldd	r25, Z+3	; 0x03
    1534:	20 e0       	ldi	r18, 0x00	; 0
    1536:	3f ef       	ldi	r19, 0xFF	; 255
    1538:	4f e7       	ldi	r20, 0x7F	; 127
    153a:	57 e4       	ldi	r21, 0x47	; 71
    153c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1540:	18 16       	cp	r1, r24
    1542:	0c f0       	brlt	.+2      	; 0x1546 <main+0x7b4>
    1544:	43 c0       	rjmp	.+134    	; 0x15cc <main+0x83a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1546:	fe 01       	movw	r30, r28
    1548:	e3 59       	subi	r30, 0x93	; 147
    154a:	ff 4f       	sbci	r31, 0xFF	; 255
    154c:	60 81       	ld	r22, Z
    154e:	71 81       	ldd	r23, Z+1	; 0x01
    1550:	82 81       	ldd	r24, Z+2	; 0x02
    1552:	93 81       	ldd	r25, Z+3	; 0x03
    1554:	20 e0       	ldi	r18, 0x00	; 0
    1556:	30 e0       	ldi	r19, 0x00	; 0
    1558:	40 e2       	ldi	r20, 0x20	; 32
    155a:	51 e4       	ldi	r21, 0x41	; 65
    155c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1560:	dc 01       	movw	r26, r24
    1562:	cb 01       	movw	r24, r22
    1564:	8e 01       	movw	r16, r28
    1566:	09 59       	subi	r16, 0x99	; 153
    1568:	1f 4f       	sbci	r17, 0xFF	; 255
    156a:	bc 01       	movw	r22, r24
    156c:	cd 01       	movw	r24, r26
    156e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1572:	dc 01       	movw	r26, r24
    1574:	cb 01       	movw	r24, r22
    1576:	f8 01       	movw	r30, r16
    1578:	91 83       	std	Z+1, r25	; 0x01
    157a:	80 83       	st	Z, r24
    157c:	1f c0       	rjmp	.+62     	; 0x15bc <main+0x82a>
    157e:	fe 01       	movw	r30, r28
    1580:	eb 59       	subi	r30, 0x9B	; 155
    1582:	ff 4f       	sbci	r31, 0xFF	; 255
    1584:	89 e1       	ldi	r24, 0x19	; 25
    1586:	90 e0       	ldi	r25, 0x00	; 0
    1588:	91 83       	std	Z+1, r25	; 0x01
    158a:	80 83       	st	Z, r24
    158c:	fe 01       	movw	r30, r28
    158e:	eb 59       	subi	r30, 0x9B	; 155
    1590:	ff 4f       	sbci	r31, 0xFF	; 255
    1592:	80 81       	ld	r24, Z
    1594:	91 81       	ldd	r25, Z+1	; 0x01
    1596:	01 97       	sbiw	r24, 0x01	; 1
    1598:	f1 f7       	brne	.-4      	; 0x1596 <main+0x804>
    159a:	fe 01       	movw	r30, r28
    159c:	eb 59       	subi	r30, 0x9B	; 155
    159e:	ff 4f       	sbci	r31, 0xFF	; 255
    15a0:	91 83       	std	Z+1, r25	; 0x01
    15a2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15a4:	de 01       	movw	r26, r28
    15a6:	a9 59       	subi	r26, 0x99	; 153
    15a8:	bf 4f       	sbci	r27, 0xFF	; 255
    15aa:	fe 01       	movw	r30, r28
    15ac:	e9 59       	subi	r30, 0x99	; 153
    15ae:	ff 4f       	sbci	r31, 0xFF	; 255
    15b0:	80 81       	ld	r24, Z
    15b2:	91 81       	ldd	r25, Z+1	; 0x01
    15b4:	01 97       	sbiw	r24, 0x01	; 1
    15b6:	11 96       	adiw	r26, 0x01	; 1
    15b8:	9c 93       	st	X, r25
    15ba:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15bc:	fe 01       	movw	r30, r28
    15be:	e9 59       	subi	r30, 0x99	; 153
    15c0:	ff 4f       	sbci	r31, 0xFF	; 255
    15c2:	80 81       	ld	r24, Z
    15c4:	91 81       	ldd	r25, Z+1	; 0x01
    15c6:	00 97       	sbiw	r24, 0x00	; 0
    15c8:	d1 f6       	brne	.-76     	; 0x157e <main+0x7ec>
    15ca:	27 c0       	rjmp	.+78     	; 0x161a <main+0x888>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15cc:	8e 01       	movw	r16, r28
    15ce:	09 59       	subi	r16, 0x99	; 153
    15d0:	1f 4f       	sbci	r17, 0xFF	; 255
    15d2:	fe 01       	movw	r30, r28
    15d4:	e7 59       	subi	r30, 0x97	; 151
    15d6:	ff 4f       	sbci	r31, 0xFF	; 255
    15d8:	60 81       	ld	r22, Z
    15da:	71 81       	ldd	r23, Z+1	; 0x01
    15dc:	82 81       	ldd	r24, Z+2	; 0x02
    15de:	93 81       	ldd	r25, Z+3	; 0x03
    15e0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    15e4:	dc 01       	movw	r26, r24
    15e6:	cb 01       	movw	r24, r22
    15e8:	f8 01       	movw	r30, r16
    15ea:	91 83       	std	Z+1, r25	; 0x01
    15ec:	80 83       	st	Z, r24
    15ee:	de 01       	movw	r26, r28
    15f0:	ad 59       	subi	r26, 0x9D	; 157
    15f2:	bf 4f       	sbci	r27, 0xFF	; 255
    15f4:	fe 01       	movw	r30, r28
    15f6:	e9 59       	subi	r30, 0x99	; 153
    15f8:	ff 4f       	sbci	r31, 0xFF	; 255
    15fa:	80 81       	ld	r24, Z
    15fc:	91 81       	ldd	r25, Z+1	; 0x01
    15fe:	8d 93       	st	X+, r24
    1600:	9c 93       	st	X, r25
    1602:	fe 01       	movw	r30, r28
    1604:	ed 59       	subi	r30, 0x9D	; 157
    1606:	ff 4f       	sbci	r31, 0xFF	; 255
    1608:	80 81       	ld	r24, Z
    160a:	91 81       	ldd	r25, Z+1	; 0x01
    160c:	01 97       	sbiw	r24, 0x01	; 1
    160e:	f1 f7       	brne	.-4      	; 0x160c <main+0x87a>
    1610:	fe 01       	movw	r30, r28
    1612:	ed 59       	subi	r30, 0x9D	; 157
    1614:	ff 4f       	sbci	r31, 0xFF	; 255
    1616:	91 83       	std	Z+1, r25	; 0x01
    1618:	80 83       	st	Z, r24
   		    	_delay_ms(1);
   		    	PORTA=0x20;
    161a:	eb e3       	ldi	r30, 0x3B	; 59
    161c:	f0 e0       	ldi	r31, 0x00	; 0
    161e:	80 e2       	ldi	r24, 0x20	; 32
    1620:	80 83       	st	Z, r24
   		    	PORTC=hourcounter2;
    1622:	e5 e3       	ldi	r30, 0x35	; 53
    1624:	f0 e0       	ldi	r31, 0x00	; 0
    1626:	80 91 6d 00 	lds	r24, 0x006D
    162a:	80 83       	st	Z, r24
    162c:	fe 01       	movw	r30, r28
    162e:	e1 5a       	subi	r30, 0xA1	; 161
    1630:	ff 4f       	sbci	r31, 0xFF	; 255
    1632:	80 e0       	ldi	r24, 0x00	; 0
    1634:	90 e0       	ldi	r25, 0x00	; 0
    1636:	a0 e8       	ldi	r26, 0x80	; 128
    1638:	bf e3       	ldi	r27, 0x3F	; 63
    163a:	80 83       	st	Z, r24
    163c:	91 83       	std	Z+1, r25	; 0x01
    163e:	a2 83       	std	Z+2, r26	; 0x02
    1640:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1642:	8e 01       	movw	r16, r28
    1644:	05 5a       	subi	r16, 0xA5	; 165
    1646:	1f 4f       	sbci	r17, 0xFF	; 255
    1648:	fe 01       	movw	r30, r28
    164a:	e1 5a       	subi	r30, 0xA1	; 161
    164c:	ff 4f       	sbci	r31, 0xFF	; 255
    164e:	60 81       	ld	r22, Z
    1650:	71 81       	ldd	r23, Z+1	; 0x01
    1652:	82 81       	ldd	r24, Z+2	; 0x02
    1654:	93 81       	ldd	r25, Z+3	; 0x03
    1656:	20 e0       	ldi	r18, 0x00	; 0
    1658:	30 e0       	ldi	r19, 0x00	; 0
    165a:	4a e7       	ldi	r20, 0x7A	; 122
    165c:	53 e4       	ldi	r21, 0x43	; 67
    165e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1662:	dc 01       	movw	r26, r24
    1664:	cb 01       	movw	r24, r22
    1666:	f8 01       	movw	r30, r16
    1668:	80 83       	st	Z, r24
    166a:	91 83       	std	Z+1, r25	; 0x01
    166c:	a2 83       	std	Z+2, r26	; 0x02
    166e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1670:	fe 01       	movw	r30, r28
    1672:	e5 5a       	subi	r30, 0xA5	; 165
    1674:	ff 4f       	sbci	r31, 0xFF	; 255
    1676:	60 81       	ld	r22, Z
    1678:	71 81       	ldd	r23, Z+1	; 0x01
    167a:	82 81       	ldd	r24, Z+2	; 0x02
    167c:	93 81       	ldd	r25, Z+3	; 0x03
    167e:	20 e0       	ldi	r18, 0x00	; 0
    1680:	30 e0       	ldi	r19, 0x00	; 0
    1682:	40 e8       	ldi	r20, 0x80	; 128
    1684:	5f e3       	ldi	r21, 0x3F	; 63
    1686:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    168a:	88 23       	and	r24, r24
    168c:	44 f4       	brge	.+16     	; 0x169e <main+0x90c>
		__ticks = 1;
    168e:	fe 01       	movw	r30, r28
    1690:	e7 5a       	subi	r30, 0xA7	; 167
    1692:	ff 4f       	sbci	r31, 0xFF	; 255
    1694:	81 e0       	ldi	r24, 0x01	; 1
    1696:	90 e0       	ldi	r25, 0x00	; 0
    1698:	91 83       	std	Z+1, r25	; 0x01
    169a:	80 83       	st	Z, r24
    169c:	64 c0       	rjmp	.+200    	; 0x1766 <main+0x9d4>
	else if (__tmp > 65535)
    169e:	fe 01       	movw	r30, r28
    16a0:	e5 5a       	subi	r30, 0xA5	; 165
    16a2:	ff 4f       	sbci	r31, 0xFF	; 255
    16a4:	60 81       	ld	r22, Z
    16a6:	71 81       	ldd	r23, Z+1	; 0x01
    16a8:	82 81       	ldd	r24, Z+2	; 0x02
    16aa:	93 81       	ldd	r25, Z+3	; 0x03
    16ac:	20 e0       	ldi	r18, 0x00	; 0
    16ae:	3f ef       	ldi	r19, 0xFF	; 255
    16b0:	4f e7       	ldi	r20, 0x7F	; 127
    16b2:	57 e4       	ldi	r21, 0x47	; 71
    16b4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    16b8:	18 16       	cp	r1, r24
    16ba:	0c f0       	brlt	.+2      	; 0x16be <main+0x92c>
    16bc:	43 c0       	rjmp	.+134    	; 0x1744 <main+0x9b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16be:	fe 01       	movw	r30, r28
    16c0:	e1 5a       	subi	r30, 0xA1	; 161
    16c2:	ff 4f       	sbci	r31, 0xFF	; 255
    16c4:	60 81       	ld	r22, Z
    16c6:	71 81       	ldd	r23, Z+1	; 0x01
    16c8:	82 81       	ldd	r24, Z+2	; 0x02
    16ca:	93 81       	ldd	r25, Z+3	; 0x03
    16cc:	20 e0       	ldi	r18, 0x00	; 0
    16ce:	30 e0       	ldi	r19, 0x00	; 0
    16d0:	40 e2       	ldi	r20, 0x20	; 32
    16d2:	51 e4       	ldi	r21, 0x41	; 65
    16d4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    16d8:	dc 01       	movw	r26, r24
    16da:	cb 01       	movw	r24, r22
    16dc:	8e 01       	movw	r16, r28
    16de:	07 5a       	subi	r16, 0xA7	; 167
    16e0:	1f 4f       	sbci	r17, 0xFF	; 255
    16e2:	bc 01       	movw	r22, r24
    16e4:	cd 01       	movw	r24, r26
    16e6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    16ea:	dc 01       	movw	r26, r24
    16ec:	cb 01       	movw	r24, r22
    16ee:	f8 01       	movw	r30, r16
    16f0:	91 83       	std	Z+1, r25	; 0x01
    16f2:	80 83       	st	Z, r24
    16f4:	1f c0       	rjmp	.+62     	; 0x1734 <main+0x9a2>
    16f6:	fe 01       	movw	r30, r28
    16f8:	e9 5a       	subi	r30, 0xA9	; 169
    16fa:	ff 4f       	sbci	r31, 0xFF	; 255
    16fc:	89 e1       	ldi	r24, 0x19	; 25
    16fe:	90 e0       	ldi	r25, 0x00	; 0
    1700:	91 83       	std	Z+1, r25	; 0x01
    1702:	80 83       	st	Z, r24
    1704:	fe 01       	movw	r30, r28
    1706:	e9 5a       	subi	r30, 0xA9	; 169
    1708:	ff 4f       	sbci	r31, 0xFF	; 255
    170a:	80 81       	ld	r24, Z
    170c:	91 81       	ldd	r25, Z+1	; 0x01
    170e:	01 97       	sbiw	r24, 0x01	; 1
    1710:	f1 f7       	brne	.-4      	; 0x170e <main+0x97c>
    1712:	fe 01       	movw	r30, r28
    1714:	e9 5a       	subi	r30, 0xA9	; 169
    1716:	ff 4f       	sbci	r31, 0xFF	; 255
    1718:	91 83       	std	Z+1, r25	; 0x01
    171a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    171c:	de 01       	movw	r26, r28
    171e:	a7 5a       	subi	r26, 0xA7	; 167
    1720:	bf 4f       	sbci	r27, 0xFF	; 255
    1722:	fe 01       	movw	r30, r28
    1724:	e7 5a       	subi	r30, 0xA7	; 167
    1726:	ff 4f       	sbci	r31, 0xFF	; 255
    1728:	80 81       	ld	r24, Z
    172a:	91 81       	ldd	r25, Z+1	; 0x01
    172c:	01 97       	sbiw	r24, 0x01	; 1
    172e:	11 96       	adiw	r26, 0x01	; 1
    1730:	9c 93       	st	X, r25
    1732:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1734:	fe 01       	movw	r30, r28
    1736:	e7 5a       	subi	r30, 0xA7	; 167
    1738:	ff 4f       	sbci	r31, 0xFF	; 255
    173a:	80 81       	ld	r24, Z
    173c:	91 81       	ldd	r25, Z+1	; 0x01
    173e:	00 97       	sbiw	r24, 0x00	; 0
    1740:	d1 f6       	brne	.-76     	; 0x16f6 <main+0x964>
    1742:	67 c3       	rjmp	.+1742   	; 0x1e12 <main+0x1080>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1744:	8e 01       	movw	r16, r28
    1746:	07 5a       	subi	r16, 0xA7	; 167
    1748:	1f 4f       	sbci	r17, 0xFF	; 255
    174a:	fe 01       	movw	r30, r28
    174c:	e5 5a       	subi	r30, 0xA5	; 165
    174e:	ff 4f       	sbci	r31, 0xFF	; 255
    1750:	60 81       	ld	r22, Z
    1752:	71 81       	ldd	r23, Z+1	; 0x01
    1754:	82 81       	ldd	r24, Z+2	; 0x02
    1756:	93 81       	ldd	r25, Z+3	; 0x03
    1758:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    175c:	dc 01       	movw	r26, r24
    175e:	cb 01       	movw	r24, r22
    1760:	f8 01       	movw	r30, r16
    1762:	91 83       	std	Z+1, r25	; 0x01
    1764:	80 83       	st	Z, r24
    1766:	de 01       	movw	r26, r28
    1768:	ab 5a       	subi	r26, 0xAB	; 171
    176a:	bf 4f       	sbci	r27, 0xFF	; 255
    176c:	fe 01       	movw	r30, r28
    176e:	e7 5a       	subi	r30, 0xA7	; 167
    1770:	ff 4f       	sbci	r31, 0xFF	; 255
    1772:	80 81       	ld	r24, Z
    1774:	91 81       	ldd	r25, Z+1	; 0x01
    1776:	11 96       	adiw	r26, 0x01	; 1
    1778:	9c 93       	st	X, r25
    177a:	8e 93       	st	-X, r24
    177c:	fe 01       	movw	r30, r28
    177e:	eb 5a       	subi	r30, 0xAB	; 171
    1780:	ff 4f       	sbci	r31, 0xFF	; 255
    1782:	80 81       	ld	r24, Z
    1784:	91 81       	ldd	r25, Z+1	; 0x01
    1786:	01 97       	sbiw	r24, 0x01	; 1
    1788:	f1 f7       	brne	.-4      	; 0x1786 <main+0x9f4>
    178a:	fe 01       	movw	r30, r28
    178c:	eb 5a       	subi	r30, 0xAB	; 171
    178e:	ff 4f       	sbci	r31, 0xFF	; 255
    1790:	91 83       	std	Z+1, r25	; 0x01
    1792:	80 83       	st	Z, r24
    1794:	3e c3       	rjmp	.+1660   	; 0x1e12 <main+0x1080>
   		    	_delay_ms(1);
    	}

    	while (flagpause==1)
    	{
    			PORTA=0x01;
    1796:	eb e3       	ldi	r30, 0x3B	; 59
    1798:	f0 e0       	ldi	r31, 0x00	; 0
    179a:	81 e0       	ldi	r24, 0x01	; 1
    179c:	80 83       	st	Z, r24
    		    PORTC=seccounter1;
    179e:	e5 e3       	ldi	r30, 0x35	; 53
    17a0:	f0 e0       	ldi	r31, 0x00	; 0
    17a2:	80 91 68 00 	lds	r24, 0x0068
    17a6:	80 83       	st	Z, r24
    17a8:	fe 01       	movw	r30, r28
    17aa:	ef 5a       	subi	r30, 0xAF	; 175
    17ac:	ff 4f       	sbci	r31, 0xFF	; 255
    17ae:	80 e0       	ldi	r24, 0x00	; 0
    17b0:	90 e0       	ldi	r25, 0x00	; 0
    17b2:	a0 e8       	ldi	r26, 0x80	; 128
    17b4:	bf e3       	ldi	r27, 0x3F	; 63
    17b6:	80 83       	st	Z, r24
    17b8:	91 83       	std	Z+1, r25	; 0x01
    17ba:	a2 83       	std	Z+2, r26	; 0x02
    17bc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17be:	8e 01       	movw	r16, r28
    17c0:	03 5b       	subi	r16, 0xB3	; 179
    17c2:	1f 4f       	sbci	r17, 0xFF	; 255
    17c4:	fe 01       	movw	r30, r28
    17c6:	ef 5a       	subi	r30, 0xAF	; 175
    17c8:	ff 4f       	sbci	r31, 0xFF	; 255
    17ca:	60 81       	ld	r22, Z
    17cc:	71 81       	ldd	r23, Z+1	; 0x01
    17ce:	82 81       	ldd	r24, Z+2	; 0x02
    17d0:	93 81       	ldd	r25, Z+3	; 0x03
    17d2:	20 e0       	ldi	r18, 0x00	; 0
    17d4:	30 e0       	ldi	r19, 0x00	; 0
    17d6:	4a e7       	ldi	r20, 0x7A	; 122
    17d8:	53 e4       	ldi	r21, 0x43	; 67
    17da:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    17de:	dc 01       	movw	r26, r24
    17e0:	cb 01       	movw	r24, r22
    17e2:	f8 01       	movw	r30, r16
    17e4:	80 83       	st	Z, r24
    17e6:	91 83       	std	Z+1, r25	; 0x01
    17e8:	a2 83       	std	Z+2, r26	; 0x02
    17ea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    17ec:	fe 01       	movw	r30, r28
    17ee:	e3 5b       	subi	r30, 0xB3	; 179
    17f0:	ff 4f       	sbci	r31, 0xFF	; 255
    17f2:	60 81       	ld	r22, Z
    17f4:	71 81       	ldd	r23, Z+1	; 0x01
    17f6:	82 81       	ldd	r24, Z+2	; 0x02
    17f8:	93 81       	ldd	r25, Z+3	; 0x03
    17fa:	20 e0       	ldi	r18, 0x00	; 0
    17fc:	30 e0       	ldi	r19, 0x00	; 0
    17fe:	40 e8       	ldi	r20, 0x80	; 128
    1800:	5f e3       	ldi	r21, 0x3F	; 63
    1802:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1806:	88 23       	and	r24, r24
    1808:	44 f4       	brge	.+16     	; 0x181a <main+0xa88>
		__ticks = 1;
    180a:	fe 01       	movw	r30, r28
    180c:	e5 5b       	subi	r30, 0xB5	; 181
    180e:	ff 4f       	sbci	r31, 0xFF	; 255
    1810:	81 e0       	ldi	r24, 0x01	; 1
    1812:	90 e0       	ldi	r25, 0x00	; 0
    1814:	91 83       	std	Z+1, r25	; 0x01
    1816:	80 83       	st	Z, r24
    1818:	64 c0       	rjmp	.+200    	; 0x18e2 <main+0xb50>
	else if (__tmp > 65535)
    181a:	fe 01       	movw	r30, r28
    181c:	e3 5b       	subi	r30, 0xB3	; 179
    181e:	ff 4f       	sbci	r31, 0xFF	; 255
    1820:	60 81       	ld	r22, Z
    1822:	71 81       	ldd	r23, Z+1	; 0x01
    1824:	82 81       	ldd	r24, Z+2	; 0x02
    1826:	93 81       	ldd	r25, Z+3	; 0x03
    1828:	20 e0       	ldi	r18, 0x00	; 0
    182a:	3f ef       	ldi	r19, 0xFF	; 255
    182c:	4f e7       	ldi	r20, 0x7F	; 127
    182e:	57 e4       	ldi	r21, 0x47	; 71
    1830:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1834:	18 16       	cp	r1, r24
    1836:	0c f0       	brlt	.+2      	; 0x183a <main+0xaa8>
    1838:	43 c0       	rjmp	.+134    	; 0x18c0 <main+0xb2e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    183a:	fe 01       	movw	r30, r28
    183c:	ef 5a       	subi	r30, 0xAF	; 175
    183e:	ff 4f       	sbci	r31, 0xFF	; 255
    1840:	60 81       	ld	r22, Z
    1842:	71 81       	ldd	r23, Z+1	; 0x01
    1844:	82 81       	ldd	r24, Z+2	; 0x02
    1846:	93 81       	ldd	r25, Z+3	; 0x03
    1848:	20 e0       	ldi	r18, 0x00	; 0
    184a:	30 e0       	ldi	r19, 0x00	; 0
    184c:	40 e2       	ldi	r20, 0x20	; 32
    184e:	51 e4       	ldi	r21, 0x41	; 65
    1850:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1854:	dc 01       	movw	r26, r24
    1856:	cb 01       	movw	r24, r22
    1858:	8e 01       	movw	r16, r28
    185a:	05 5b       	subi	r16, 0xB5	; 181
    185c:	1f 4f       	sbci	r17, 0xFF	; 255
    185e:	bc 01       	movw	r22, r24
    1860:	cd 01       	movw	r24, r26
    1862:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1866:	dc 01       	movw	r26, r24
    1868:	cb 01       	movw	r24, r22
    186a:	f8 01       	movw	r30, r16
    186c:	91 83       	std	Z+1, r25	; 0x01
    186e:	80 83       	st	Z, r24
    1870:	1f c0       	rjmp	.+62     	; 0x18b0 <main+0xb1e>
    1872:	fe 01       	movw	r30, r28
    1874:	e7 5b       	subi	r30, 0xB7	; 183
    1876:	ff 4f       	sbci	r31, 0xFF	; 255
    1878:	89 e1       	ldi	r24, 0x19	; 25
    187a:	90 e0       	ldi	r25, 0x00	; 0
    187c:	91 83       	std	Z+1, r25	; 0x01
    187e:	80 83       	st	Z, r24
    1880:	fe 01       	movw	r30, r28
    1882:	e7 5b       	subi	r30, 0xB7	; 183
    1884:	ff 4f       	sbci	r31, 0xFF	; 255
    1886:	80 81       	ld	r24, Z
    1888:	91 81       	ldd	r25, Z+1	; 0x01
    188a:	01 97       	sbiw	r24, 0x01	; 1
    188c:	f1 f7       	brne	.-4      	; 0x188a <main+0xaf8>
    188e:	fe 01       	movw	r30, r28
    1890:	e7 5b       	subi	r30, 0xB7	; 183
    1892:	ff 4f       	sbci	r31, 0xFF	; 255
    1894:	91 83       	std	Z+1, r25	; 0x01
    1896:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1898:	de 01       	movw	r26, r28
    189a:	a5 5b       	subi	r26, 0xB5	; 181
    189c:	bf 4f       	sbci	r27, 0xFF	; 255
    189e:	fe 01       	movw	r30, r28
    18a0:	e5 5b       	subi	r30, 0xB5	; 181
    18a2:	ff 4f       	sbci	r31, 0xFF	; 255
    18a4:	80 81       	ld	r24, Z
    18a6:	91 81       	ldd	r25, Z+1	; 0x01
    18a8:	01 97       	sbiw	r24, 0x01	; 1
    18aa:	11 96       	adiw	r26, 0x01	; 1
    18ac:	9c 93       	st	X, r25
    18ae:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18b0:	fe 01       	movw	r30, r28
    18b2:	e5 5b       	subi	r30, 0xB5	; 181
    18b4:	ff 4f       	sbci	r31, 0xFF	; 255
    18b6:	80 81       	ld	r24, Z
    18b8:	91 81       	ldd	r25, Z+1	; 0x01
    18ba:	00 97       	sbiw	r24, 0x00	; 0
    18bc:	d1 f6       	brne	.-76     	; 0x1872 <main+0xae0>
    18be:	27 c0       	rjmp	.+78     	; 0x190e <main+0xb7c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18c0:	8e 01       	movw	r16, r28
    18c2:	05 5b       	subi	r16, 0xB5	; 181
    18c4:	1f 4f       	sbci	r17, 0xFF	; 255
    18c6:	fe 01       	movw	r30, r28
    18c8:	e3 5b       	subi	r30, 0xB3	; 179
    18ca:	ff 4f       	sbci	r31, 0xFF	; 255
    18cc:	60 81       	ld	r22, Z
    18ce:	71 81       	ldd	r23, Z+1	; 0x01
    18d0:	82 81       	ldd	r24, Z+2	; 0x02
    18d2:	93 81       	ldd	r25, Z+3	; 0x03
    18d4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    18d8:	dc 01       	movw	r26, r24
    18da:	cb 01       	movw	r24, r22
    18dc:	f8 01       	movw	r30, r16
    18de:	91 83       	std	Z+1, r25	; 0x01
    18e0:	80 83       	st	Z, r24
    18e2:	de 01       	movw	r26, r28
    18e4:	a9 5b       	subi	r26, 0xB9	; 185
    18e6:	bf 4f       	sbci	r27, 0xFF	; 255
    18e8:	fe 01       	movw	r30, r28
    18ea:	e5 5b       	subi	r30, 0xB5	; 181
    18ec:	ff 4f       	sbci	r31, 0xFF	; 255
    18ee:	80 81       	ld	r24, Z
    18f0:	91 81       	ldd	r25, Z+1	; 0x01
    18f2:	8d 93       	st	X+, r24
    18f4:	9c 93       	st	X, r25
    18f6:	fe 01       	movw	r30, r28
    18f8:	e9 5b       	subi	r30, 0xB9	; 185
    18fa:	ff 4f       	sbci	r31, 0xFF	; 255
    18fc:	80 81       	ld	r24, Z
    18fe:	91 81       	ldd	r25, Z+1	; 0x01
    1900:	01 97       	sbiw	r24, 0x01	; 1
    1902:	f1 f7       	brne	.-4      	; 0x1900 <main+0xb6e>
    1904:	fe 01       	movw	r30, r28
    1906:	e9 5b       	subi	r30, 0xB9	; 185
    1908:	ff 4f       	sbci	r31, 0xFF	; 255
    190a:	91 83       	std	Z+1, r25	; 0x01
    190c:	80 83       	st	Z, r24
    		   	_delay_ms(1);
      		   	PORTA=0x02;
    190e:	eb e3       	ldi	r30, 0x3B	; 59
    1910:	f0 e0       	ldi	r31, 0x00	; 0
    1912:	82 e0       	ldi	r24, 0x02	; 2
    1914:	80 83       	st	Z, r24
      		   	PORTC=seccounter2;
    1916:	e5 e3       	ldi	r30, 0x35	; 53
    1918:	f0 e0       	ldi	r31, 0x00	; 0
    191a:	80 91 69 00 	lds	r24, 0x0069
    191e:	80 83       	st	Z, r24
    1920:	fe 01       	movw	r30, r28
    1922:	ed 5b       	subi	r30, 0xBD	; 189
    1924:	ff 4f       	sbci	r31, 0xFF	; 255
    1926:	80 e0       	ldi	r24, 0x00	; 0
    1928:	90 e0       	ldi	r25, 0x00	; 0
    192a:	a0 e8       	ldi	r26, 0x80	; 128
    192c:	bf e3       	ldi	r27, 0x3F	; 63
    192e:	80 83       	st	Z, r24
    1930:	91 83       	std	Z+1, r25	; 0x01
    1932:	a2 83       	std	Z+2, r26	; 0x02
    1934:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1936:	8e 01       	movw	r16, r28
    1938:	01 5c       	subi	r16, 0xC1	; 193
    193a:	1f 4f       	sbci	r17, 0xFF	; 255
    193c:	fe 01       	movw	r30, r28
    193e:	ed 5b       	subi	r30, 0xBD	; 189
    1940:	ff 4f       	sbci	r31, 0xFF	; 255
    1942:	60 81       	ld	r22, Z
    1944:	71 81       	ldd	r23, Z+1	; 0x01
    1946:	82 81       	ldd	r24, Z+2	; 0x02
    1948:	93 81       	ldd	r25, Z+3	; 0x03
    194a:	20 e0       	ldi	r18, 0x00	; 0
    194c:	30 e0       	ldi	r19, 0x00	; 0
    194e:	4a e7       	ldi	r20, 0x7A	; 122
    1950:	53 e4       	ldi	r21, 0x43	; 67
    1952:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1956:	dc 01       	movw	r26, r24
    1958:	cb 01       	movw	r24, r22
    195a:	f8 01       	movw	r30, r16
    195c:	80 83       	st	Z, r24
    195e:	91 83       	std	Z+1, r25	; 0x01
    1960:	a2 83       	std	Z+2, r26	; 0x02
    1962:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1964:	fe 01       	movw	r30, r28
    1966:	ff 96       	adiw	r30, 0x3f	; 63
    1968:	60 81       	ld	r22, Z
    196a:	71 81       	ldd	r23, Z+1	; 0x01
    196c:	82 81       	ldd	r24, Z+2	; 0x02
    196e:	93 81       	ldd	r25, Z+3	; 0x03
    1970:	20 e0       	ldi	r18, 0x00	; 0
    1972:	30 e0       	ldi	r19, 0x00	; 0
    1974:	40 e8       	ldi	r20, 0x80	; 128
    1976:	5f e3       	ldi	r21, 0x3F	; 63
    1978:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    197c:	88 23       	and	r24, r24
    197e:	2c f4       	brge	.+10     	; 0x198a <main+0xbf8>
		__ticks = 1;
    1980:	81 e0       	ldi	r24, 0x01	; 1
    1982:	90 e0       	ldi	r25, 0x00	; 0
    1984:	9e af       	std	Y+62, r25	; 0x3e
    1986:	8d af       	std	Y+61, r24	; 0x3d
    1988:	46 c0       	rjmp	.+140    	; 0x1a16 <main+0xc84>
	else if (__tmp > 65535)
    198a:	fe 01       	movw	r30, r28
    198c:	ff 96       	adiw	r30, 0x3f	; 63
    198e:	60 81       	ld	r22, Z
    1990:	71 81       	ldd	r23, Z+1	; 0x01
    1992:	82 81       	ldd	r24, Z+2	; 0x02
    1994:	93 81       	ldd	r25, Z+3	; 0x03
    1996:	20 e0       	ldi	r18, 0x00	; 0
    1998:	3f ef       	ldi	r19, 0xFF	; 255
    199a:	4f e7       	ldi	r20, 0x7F	; 127
    199c:	57 e4       	ldi	r21, 0x47	; 71
    199e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    19a2:	18 16       	cp	r1, r24
    19a4:	64 f5       	brge	.+88     	; 0x19fe <main+0xc6c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19a6:	fe 01       	movw	r30, r28
    19a8:	ed 5b       	subi	r30, 0xBD	; 189
    19aa:	ff 4f       	sbci	r31, 0xFF	; 255
    19ac:	60 81       	ld	r22, Z
    19ae:	71 81       	ldd	r23, Z+1	; 0x01
    19b0:	82 81       	ldd	r24, Z+2	; 0x02
    19b2:	93 81       	ldd	r25, Z+3	; 0x03
    19b4:	20 e0       	ldi	r18, 0x00	; 0
    19b6:	30 e0       	ldi	r19, 0x00	; 0
    19b8:	40 e2       	ldi	r20, 0x20	; 32
    19ba:	51 e4       	ldi	r21, 0x41	; 65
    19bc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    19c0:	dc 01       	movw	r26, r24
    19c2:	cb 01       	movw	r24, r22
    19c4:	bc 01       	movw	r22, r24
    19c6:	cd 01       	movw	r24, r26
    19c8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    19cc:	dc 01       	movw	r26, r24
    19ce:	cb 01       	movw	r24, r22
    19d0:	9e af       	std	Y+62, r25	; 0x3e
    19d2:	8d af       	std	Y+61, r24	; 0x3d
    19d4:	0f c0       	rjmp	.+30     	; 0x19f4 <main+0xc62>
    19d6:	89 e1       	ldi	r24, 0x19	; 25
    19d8:	90 e0       	ldi	r25, 0x00	; 0
    19da:	9c af       	std	Y+60, r25	; 0x3c
    19dc:	8b af       	std	Y+59, r24	; 0x3b
    19de:	8b ad       	ldd	r24, Y+59	; 0x3b
    19e0:	9c ad       	ldd	r25, Y+60	; 0x3c
    19e2:	01 97       	sbiw	r24, 0x01	; 1
    19e4:	f1 f7       	brne	.-4      	; 0x19e2 <main+0xc50>
    19e6:	9c af       	std	Y+60, r25	; 0x3c
    19e8:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19ea:	8d ad       	ldd	r24, Y+61	; 0x3d
    19ec:	9e ad       	ldd	r25, Y+62	; 0x3e
    19ee:	01 97       	sbiw	r24, 0x01	; 1
    19f0:	9e af       	std	Y+62, r25	; 0x3e
    19f2:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19f4:	8d ad       	ldd	r24, Y+61	; 0x3d
    19f6:	9e ad       	ldd	r25, Y+62	; 0x3e
    19f8:	00 97       	sbiw	r24, 0x00	; 0
    19fa:	69 f7       	brne	.-38     	; 0x19d6 <main+0xc44>
    19fc:	16 c0       	rjmp	.+44     	; 0x1a2a <main+0xc98>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19fe:	fe 01       	movw	r30, r28
    1a00:	ff 96       	adiw	r30, 0x3f	; 63
    1a02:	60 81       	ld	r22, Z
    1a04:	71 81       	ldd	r23, Z+1	; 0x01
    1a06:	82 81       	ldd	r24, Z+2	; 0x02
    1a08:	93 81       	ldd	r25, Z+3	; 0x03
    1a0a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a0e:	dc 01       	movw	r26, r24
    1a10:	cb 01       	movw	r24, r22
    1a12:	9e af       	std	Y+62, r25	; 0x3e
    1a14:	8d af       	std	Y+61, r24	; 0x3d
    1a16:	8d ad       	ldd	r24, Y+61	; 0x3d
    1a18:	9e ad       	ldd	r25, Y+62	; 0x3e
    1a1a:	9a af       	std	Y+58, r25	; 0x3a
    1a1c:	89 af       	std	Y+57, r24	; 0x39
    1a1e:	89 ad       	ldd	r24, Y+57	; 0x39
    1a20:	9a ad       	ldd	r25, Y+58	; 0x3a
    1a22:	01 97       	sbiw	r24, 0x01	; 1
    1a24:	f1 f7       	brne	.-4      	; 0x1a22 <main+0xc90>
    1a26:	9a af       	std	Y+58, r25	; 0x3a
    1a28:	89 af       	std	Y+57, r24	; 0x39
    		   	_delay_ms(1);
    		   	PORTA=0x04;
    1a2a:	eb e3       	ldi	r30, 0x3B	; 59
    1a2c:	f0 e0       	ldi	r31, 0x00	; 0
    1a2e:	84 e0       	ldi	r24, 0x04	; 4
    1a30:	80 83       	st	Z, r24
    		    PORTC=mincounter1;
    1a32:	e5 e3       	ldi	r30, 0x35	; 53
    1a34:	f0 e0       	ldi	r31, 0x00	; 0
    1a36:	80 91 6a 00 	lds	r24, 0x006A
    1a3a:	80 83       	st	Z, r24
    1a3c:	80 e0       	ldi	r24, 0x00	; 0
    1a3e:	90 e0       	ldi	r25, 0x00	; 0
    1a40:	a0 e8       	ldi	r26, 0x80	; 128
    1a42:	bf e3       	ldi	r27, 0x3F	; 63
    1a44:	8d ab       	std	Y+53, r24	; 0x35
    1a46:	9e ab       	std	Y+54, r25	; 0x36
    1a48:	af ab       	std	Y+55, r26	; 0x37
    1a4a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a4c:	6d a9       	ldd	r22, Y+53	; 0x35
    1a4e:	7e a9       	ldd	r23, Y+54	; 0x36
    1a50:	8f a9       	ldd	r24, Y+55	; 0x37
    1a52:	98 ad       	ldd	r25, Y+56	; 0x38
    1a54:	20 e0       	ldi	r18, 0x00	; 0
    1a56:	30 e0       	ldi	r19, 0x00	; 0
    1a58:	4a e7       	ldi	r20, 0x7A	; 122
    1a5a:	53 e4       	ldi	r21, 0x43	; 67
    1a5c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a60:	dc 01       	movw	r26, r24
    1a62:	cb 01       	movw	r24, r22
    1a64:	89 ab       	std	Y+49, r24	; 0x31
    1a66:	9a ab       	std	Y+50, r25	; 0x32
    1a68:	ab ab       	std	Y+51, r26	; 0x33
    1a6a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1a6c:	69 a9       	ldd	r22, Y+49	; 0x31
    1a6e:	7a a9       	ldd	r23, Y+50	; 0x32
    1a70:	8b a9       	ldd	r24, Y+51	; 0x33
    1a72:	9c a9       	ldd	r25, Y+52	; 0x34
    1a74:	20 e0       	ldi	r18, 0x00	; 0
    1a76:	30 e0       	ldi	r19, 0x00	; 0
    1a78:	40 e8       	ldi	r20, 0x80	; 128
    1a7a:	5f e3       	ldi	r21, 0x3F	; 63
    1a7c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1a80:	88 23       	and	r24, r24
    1a82:	2c f4       	brge	.+10     	; 0x1a8e <main+0xcfc>
		__ticks = 1;
    1a84:	81 e0       	ldi	r24, 0x01	; 1
    1a86:	90 e0       	ldi	r25, 0x00	; 0
    1a88:	98 ab       	std	Y+48, r25	; 0x30
    1a8a:	8f a7       	std	Y+47, r24	; 0x2f
    1a8c:	3f c0       	rjmp	.+126    	; 0x1b0c <main+0xd7a>
	else if (__tmp > 65535)
    1a8e:	69 a9       	ldd	r22, Y+49	; 0x31
    1a90:	7a a9       	ldd	r23, Y+50	; 0x32
    1a92:	8b a9       	ldd	r24, Y+51	; 0x33
    1a94:	9c a9       	ldd	r25, Y+52	; 0x34
    1a96:	20 e0       	ldi	r18, 0x00	; 0
    1a98:	3f ef       	ldi	r19, 0xFF	; 255
    1a9a:	4f e7       	ldi	r20, 0x7F	; 127
    1a9c:	57 e4       	ldi	r21, 0x47	; 71
    1a9e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1aa2:	18 16       	cp	r1, r24
    1aa4:	4c f5       	brge	.+82     	; 0x1af8 <main+0xd66>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1aa6:	6d a9       	ldd	r22, Y+53	; 0x35
    1aa8:	7e a9       	ldd	r23, Y+54	; 0x36
    1aaa:	8f a9       	ldd	r24, Y+55	; 0x37
    1aac:	98 ad       	ldd	r25, Y+56	; 0x38
    1aae:	20 e0       	ldi	r18, 0x00	; 0
    1ab0:	30 e0       	ldi	r19, 0x00	; 0
    1ab2:	40 e2       	ldi	r20, 0x20	; 32
    1ab4:	51 e4       	ldi	r21, 0x41	; 65
    1ab6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1aba:	dc 01       	movw	r26, r24
    1abc:	cb 01       	movw	r24, r22
    1abe:	bc 01       	movw	r22, r24
    1ac0:	cd 01       	movw	r24, r26
    1ac2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1ac6:	dc 01       	movw	r26, r24
    1ac8:	cb 01       	movw	r24, r22
    1aca:	98 ab       	std	Y+48, r25	; 0x30
    1acc:	8f a7       	std	Y+47, r24	; 0x2f
    1ace:	0f c0       	rjmp	.+30     	; 0x1aee <main+0xd5c>
    1ad0:	89 e1       	ldi	r24, 0x19	; 25
    1ad2:	90 e0       	ldi	r25, 0x00	; 0
    1ad4:	9e a7       	std	Y+46, r25	; 0x2e
    1ad6:	8d a7       	std	Y+45, r24	; 0x2d
    1ad8:	8d a5       	ldd	r24, Y+45	; 0x2d
    1ada:	9e a5       	ldd	r25, Y+46	; 0x2e
    1adc:	01 97       	sbiw	r24, 0x01	; 1
    1ade:	f1 f7       	brne	.-4      	; 0x1adc <main+0xd4a>
    1ae0:	9e a7       	std	Y+46, r25	; 0x2e
    1ae2:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ae4:	8f a5       	ldd	r24, Y+47	; 0x2f
    1ae6:	98 a9       	ldd	r25, Y+48	; 0x30
    1ae8:	01 97       	sbiw	r24, 0x01	; 1
    1aea:	98 ab       	std	Y+48, r25	; 0x30
    1aec:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1aee:	8f a5       	ldd	r24, Y+47	; 0x2f
    1af0:	98 a9       	ldd	r25, Y+48	; 0x30
    1af2:	00 97       	sbiw	r24, 0x00	; 0
    1af4:	69 f7       	brne	.-38     	; 0x1ad0 <main+0xd3e>
    1af6:	14 c0       	rjmp	.+40     	; 0x1b20 <main+0xd8e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1af8:	69 a9       	ldd	r22, Y+49	; 0x31
    1afa:	7a a9       	ldd	r23, Y+50	; 0x32
    1afc:	8b a9       	ldd	r24, Y+51	; 0x33
    1afe:	9c a9       	ldd	r25, Y+52	; 0x34
    1b00:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b04:	dc 01       	movw	r26, r24
    1b06:	cb 01       	movw	r24, r22
    1b08:	98 ab       	std	Y+48, r25	; 0x30
    1b0a:	8f a7       	std	Y+47, r24	; 0x2f
    1b0c:	8f a5       	ldd	r24, Y+47	; 0x2f
    1b0e:	98 a9       	ldd	r25, Y+48	; 0x30
    1b10:	9c a7       	std	Y+44, r25	; 0x2c
    1b12:	8b a7       	std	Y+43, r24	; 0x2b
    1b14:	8b a5       	ldd	r24, Y+43	; 0x2b
    1b16:	9c a5       	ldd	r25, Y+44	; 0x2c
    1b18:	01 97       	sbiw	r24, 0x01	; 1
    1b1a:	f1 f7       	brne	.-4      	; 0x1b18 <main+0xd86>
    1b1c:	9c a7       	std	Y+44, r25	; 0x2c
    1b1e:	8b a7       	std	Y+43, r24	; 0x2b
    	      	_delay_ms(1);
    	      	PORTA=0x08;
    1b20:	eb e3       	ldi	r30, 0x3B	; 59
    1b22:	f0 e0       	ldi	r31, 0x00	; 0
    1b24:	88 e0       	ldi	r24, 0x08	; 8
    1b26:	80 83       	st	Z, r24
    	    	PORTC=mincounter2;
    1b28:	e5 e3       	ldi	r30, 0x35	; 53
    1b2a:	f0 e0       	ldi	r31, 0x00	; 0
    1b2c:	80 91 6b 00 	lds	r24, 0x006B
    1b30:	80 83       	st	Z, r24
    1b32:	80 e0       	ldi	r24, 0x00	; 0
    1b34:	90 e0       	ldi	r25, 0x00	; 0
    1b36:	a0 e8       	ldi	r26, 0x80	; 128
    1b38:	bf e3       	ldi	r27, 0x3F	; 63
    1b3a:	8f a3       	std	Y+39, r24	; 0x27
    1b3c:	98 a7       	std	Y+40, r25	; 0x28
    1b3e:	a9 a7       	std	Y+41, r26	; 0x29
    1b40:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b42:	6f a1       	ldd	r22, Y+39	; 0x27
    1b44:	78 a5       	ldd	r23, Y+40	; 0x28
    1b46:	89 a5       	ldd	r24, Y+41	; 0x29
    1b48:	9a a5       	ldd	r25, Y+42	; 0x2a
    1b4a:	20 e0       	ldi	r18, 0x00	; 0
    1b4c:	30 e0       	ldi	r19, 0x00	; 0
    1b4e:	4a e7       	ldi	r20, 0x7A	; 122
    1b50:	53 e4       	ldi	r21, 0x43	; 67
    1b52:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b56:	dc 01       	movw	r26, r24
    1b58:	cb 01       	movw	r24, r22
    1b5a:	8b a3       	std	Y+35, r24	; 0x23
    1b5c:	9c a3       	std	Y+36, r25	; 0x24
    1b5e:	ad a3       	std	Y+37, r26	; 0x25
    1b60:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1b62:	6b a1       	ldd	r22, Y+35	; 0x23
    1b64:	7c a1       	ldd	r23, Y+36	; 0x24
    1b66:	8d a1       	ldd	r24, Y+37	; 0x25
    1b68:	9e a1       	ldd	r25, Y+38	; 0x26
    1b6a:	20 e0       	ldi	r18, 0x00	; 0
    1b6c:	30 e0       	ldi	r19, 0x00	; 0
    1b6e:	40 e8       	ldi	r20, 0x80	; 128
    1b70:	5f e3       	ldi	r21, 0x3F	; 63
    1b72:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1b76:	88 23       	and	r24, r24
    1b78:	2c f4       	brge	.+10     	; 0x1b84 <main+0xdf2>
		__ticks = 1;
    1b7a:	81 e0       	ldi	r24, 0x01	; 1
    1b7c:	90 e0       	ldi	r25, 0x00	; 0
    1b7e:	9a a3       	std	Y+34, r25	; 0x22
    1b80:	89 a3       	std	Y+33, r24	; 0x21
    1b82:	3f c0       	rjmp	.+126    	; 0x1c02 <main+0xe70>
	else if (__tmp > 65535)
    1b84:	6b a1       	ldd	r22, Y+35	; 0x23
    1b86:	7c a1       	ldd	r23, Y+36	; 0x24
    1b88:	8d a1       	ldd	r24, Y+37	; 0x25
    1b8a:	9e a1       	ldd	r25, Y+38	; 0x26
    1b8c:	20 e0       	ldi	r18, 0x00	; 0
    1b8e:	3f ef       	ldi	r19, 0xFF	; 255
    1b90:	4f e7       	ldi	r20, 0x7F	; 127
    1b92:	57 e4       	ldi	r21, 0x47	; 71
    1b94:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1b98:	18 16       	cp	r1, r24
    1b9a:	4c f5       	brge	.+82     	; 0x1bee <main+0xe5c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b9c:	6f a1       	ldd	r22, Y+39	; 0x27
    1b9e:	78 a5       	ldd	r23, Y+40	; 0x28
    1ba0:	89 a5       	ldd	r24, Y+41	; 0x29
    1ba2:	9a a5       	ldd	r25, Y+42	; 0x2a
    1ba4:	20 e0       	ldi	r18, 0x00	; 0
    1ba6:	30 e0       	ldi	r19, 0x00	; 0
    1ba8:	40 e2       	ldi	r20, 0x20	; 32
    1baa:	51 e4       	ldi	r21, 0x41	; 65
    1bac:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1bb0:	dc 01       	movw	r26, r24
    1bb2:	cb 01       	movw	r24, r22
    1bb4:	bc 01       	movw	r22, r24
    1bb6:	cd 01       	movw	r24, r26
    1bb8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1bbc:	dc 01       	movw	r26, r24
    1bbe:	cb 01       	movw	r24, r22
    1bc0:	9a a3       	std	Y+34, r25	; 0x22
    1bc2:	89 a3       	std	Y+33, r24	; 0x21
    1bc4:	0f c0       	rjmp	.+30     	; 0x1be4 <main+0xe52>
    1bc6:	89 e1       	ldi	r24, 0x19	; 25
    1bc8:	90 e0       	ldi	r25, 0x00	; 0
    1bca:	98 a3       	std	Y+32, r25	; 0x20
    1bcc:	8f 8f       	std	Y+31, r24	; 0x1f
    1bce:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1bd0:	98 a1       	ldd	r25, Y+32	; 0x20
    1bd2:	01 97       	sbiw	r24, 0x01	; 1
    1bd4:	f1 f7       	brne	.-4      	; 0x1bd2 <main+0xe40>
    1bd6:	98 a3       	std	Y+32, r25	; 0x20
    1bd8:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bda:	89 a1       	ldd	r24, Y+33	; 0x21
    1bdc:	9a a1       	ldd	r25, Y+34	; 0x22
    1bde:	01 97       	sbiw	r24, 0x01	; 1
    1be0:	9a a3       	std	Y+34, r25	; 0x22
    1be2:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1be4:	89 a1       	ldd	r24, Y+33	; 0x21
    1be6:	9a a1       	ldd	r25, Y+34	; 0x22
    1be8:	00 97       	sbiw	r24, 0x00	; 0
    1bea:	69 f7       	brne	.-38     	; 0x1bc6 <main+0xe34>
    1bec:	14 c0       	rjmp	.+40     	; 0x1c16 <main+0xe84>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bee:	6b a1       	ldd	r22, Y+35	; 0x23
    1bf0:	7c a1       	ldd	r23, Y+36	; 0x24
    1bf2:	8d a1       	ldd	r24, Y+37	; 0x25
    1bf4:	9e a1       	ldd	r25, Y+38	; 0x26
    1bf6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1bfa:	dc 01       	movw	r26, r24
    1bfc:	cb 01       	movw	r24, r22
    1bfe:	9a a3       	std	Y+34, r25	; 0x22
    1c00:	89 a3       	std	Y+33, r24	; 0x21
    1c02:	89 a1       	ldd	r24, Y+33	; 0x21
    1c04:	9a a1       	ldd	r25, Y+34	; 0x22
    1c06:	9e 8f       	std	Y+30, r25	; 0x1e
    1c08:	8d 8f       	std	Y+29, r24	; 0x1d
    1c0a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1c0c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1c0e:	01 97       	sbiw	r24, 0x01	; 1
    1c10:	f1 f7       	brne	.-4      	; 0x1c0e <main+0xe7c>
    1c12:	9e 8f       	std	Y+30, r25	; 0x1e
    1c14:	8d 8f       	std	Y+29, r24	; 0x1d
    	    	_delay_ms(1);
    	    	PORTA=0x10;
    1c16:	eb e3       	ldi	r30, 0x3B	; 59
    1c18:	f0 e0       	ldi	r31, 0x00	; 0
    1c1a:	80 e1       	ldi	r24, 0x10	; 16
    1c1c:	80 83       	st	Z, r24
    	    	PORTC=hourcounter1;
    1c1e:	e5 e3       	ldi	r30, 0x35	; 53
    1c20:	f0 e0       	ldi	r31, 0x00	; 0
    1c22:	80 91 6c 00 	lds	r24, 0x006C
    1c26:	80 83       	st	Z, r24
    1c28:	80 e0       	ldi	r24, 0x00	; 0
    1c2a:	90 e0       	ldi	r25, 0x00	; 0
    1c2c:	a0 e8       	ldi	r26, 0x80	; 128
    1c2e:	bf e3       	ldi	r27, 0x3F	; 63
    1c30:	89 8f       	std	Y+25, r24	; 0x19
    1c32:	9a 8f       	std	Y+26, r25	; 0x1a
    1c34:	ab 8f       	std	Y+27, r26	; 0x1b
    1c36:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c38:	69 8d       	ldd	r22, Y+25	; 0x19
    1c3a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1c3c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c3e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c40:	20 e0       	ldi	r18, 0x00	; 0
    1c42:	30 e0       	ldi	r19, 0x00	; 0
    1c44:	4a e7       	ldi	r20, 0x7A	; 122
    1c46:	53 e4       	ldi	r21, 0x43	; 67
    1c48:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c4c:	dc 01       	movw	r26, r24
    1c4e:	cb 01       	movw	r24, r22
    1c50:	8d 8b       	std	Y+21, r24	; 0x15
    1c52:	9e 8b       	std	Y+22, r25	; 0x16
    1c54:	af 8b       	std	Y+23, r26	; 0x17
    1c56:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1c58:	6d 89       	ldd	r22, Y+21	; 0x15
    1c5a:	7e 89       	ldd	r23, Y+22	; 0x16
    1c5c:	8f 89       	ldd	r24, Y+23	; 0x17
    1c5e:	98 8d       	ldd	r25, Y+24	; 0x18
    1c60:	20 e0       	ldi	r18, 0x00	; 0
    1c62:	30 e0       	ldi	r19, 0x00	; 0
    1c64:	40 e8       	ldi	r20, 0x80	; 128
    1c66:	5f e3       	ldi	r21, 0x3F	; 63
    1c68:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1c6c:	88 23       	and	r24, r24
    1c6e:	2c f4       	brge	.+10     	; 0x1c7a <main+0xee8>
		__ticks = 1;
    1c70:	81 e0       	ldi	r24, 0x01	; 1
    1c72:	90 e0       	ldi	r25, 0x00	; 0
    1c74:	9c 8b       	std	Y+20, r25	; 0x14
    1c76:	8b 8b       	std	Y+19, r24	; 0x13
    1c78:	3f c0       	rjmp	.+126    	; 0x1cf8 <main+0xf66>
	else if (__tmp > 65535)
    1c7a:	6d 89       	ldd	r22, Y+21	; 0x15
    1c7c:	7e 89       	ldd	r23, Y+22	; 0x16
    1c7e:	8f 89       	ldd	r24, Y+23	; 0x17
    1c80:	98 8d       	ldd	r25, Y+24	; 0x18
    1c82:	20 e0       	ldi	r18, 0x00	; 0
    1c84:	3f ef       	ldi	r19, 0xFF	; 255
    1c86:	4f e7       	ldi	r20, 0x7F	; 127
    1c88:	57 e4       	ldi	r21, 0x47	; 71
    1c8a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1c8e:	18 16       	cp	r1, r24
    1c90:	4c f5       	brge	.+82     	; 0x1ce4 <main+0xf52>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c92:	69 8d       	ldd	r22, Y+25	; 0x19
    1c94:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1c96:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c98:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c9a:	20 e0       	ldi	r18, 0x00	; 0
    1c9c:	30 e0       	ldi	r19, 0x00	; 0
    1c9e:	40 e2       	ldi	r20, 0x20	; 32
    1ca0:	51 e4       	ldi	r21, 0x41	; 65
    1ca2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ca6:	dc 01       	movw	r26, r24
    1ca8:	cb 01       	movw	r24, r22
    1caa:	bc 01       	movw	r22, r24
    1cac:	cd 01       	movw	r24, r26
    1cae:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1cb2:	dc 01       	movw	r26, r24
    1cb4:	cb 01       	movw	r24, r22
    1cb6:	9c 8b       	std	Y+20, r25	; 0x14
    1cb8:	8b 8b       	std	Y+19, r24	; 0x13
    1cba:	0f c0       	rjmp	.+30     	; 0x1cda <main+0xf48>
    1cbc:	89 e1       	ldi	r24, 0x19	; 25
    1cbe:	90 e0       	ldi	r25, 0x00	; 0
    1cc0:	9a 8b       	std	Y+18, r25	; 0x12
    1cc2:	89 8b       	std	Y+17, r24	; 0x11
    1cc4:	89 89       	ldd	r24, Y+17	; 0x11
    1cc6:	9a 89       	ldd	r25, Y+18	; 0x12
    1cc8:	01 97       	sbiw	r24, 0x01	; 1
    1cca:	f1 f7       	brne	.-4      	; 0x1cc8 <main+0xf36>
    1ccc:	9a 8b       	std	Y+18, r25	; 0x12
    1cce:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1cd0:	8b 89       	ldd	r24, Y+19	; 0x13
    1cd2:	9c 89       	ldd	r25, Y+20	; 0x14
    1cd4:	01 97       	sbiw	r24, 0x01	; 1
    1cd6:	9c 8b       	std	Y+20, r25	; 0x14
    1cd8:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1cda:	8b 89       	ldd	r24, Y+19	; 0x13
    1cdc:	9c 89       	ldd	r25, Y+20	; 0x14
    1cde:	00 97       	sbiw	r24, 0x00	; 0
    1ce0:	69 f7       	brne	.-38     	; 0x1cbc <main+0xf2a>
    1ce2:	14 c0       	rjmp	.+40     	; 0x1d0c <main+0xf7a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ce4:	6d 89       	ldd	r22, Y+21	; 0x15
    1ce6:	7e 89       	ldd	r23, Y+22	; 0x16
    1ce8:	8f 89       	ldd	r24, Y+23	; 0x17
    1cea:	98 8d       	ldd	r25, Y+24	; 0x18
    1cec:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1cf0:	dc 01       	movw	r26, r24
    1cf2:	cb 01       	movw	r24, r22
    1cf4:	9c 8b       	std	Y+20, r25	; 0x14
    1cf6:	8b 8b       	std	Y+19, r24	; 0x13
    1cf8:	8b 89       	ldd	r24, Y+19	; 0x13
    1cfa:	9c 89       	ldd	r25, Y+20	; 0x14
    1cfc:	98 8b       	std	Y+16, r25	; 0x10
    1cfe:	8f 87       	std	Y+15, r24	; 0x0f
    1d00:	8f 85       	ldd	r24, Y+15	; 0x0f
    1d02:	98 89       	ldd	r25, Y+16	; 0x10
    1d04:	01 97       	sbiw	r24, 0x01	; 1
    1d06:	f1 f7       	brne	.-4      	; 0x1d04 <main+0xf72>
    1d08:	98 8b       	std	Y+16, r25	; 0x10
    1d0a:	8f 87       	std	Y+15, r24	; 0x0f
    	    	_delay_ms(1);
    	    	PORTA=0x20;
    1d0c:	eb e3       	ldi	r30, 0x3B	; 59
    1d0e:	f0 e0       	ldi	r31, 0x00	; 0
    1d10:	80 e2       	ldi	r24, 0x20	; 32
    1d12:	80 83       	st	Z, r24
     	    	PORTC=hourcounter2;
    1d14:	e5 e3       	ldi	r30, 0x35	; 53
    1d16:	f0 e0       	ldi	r31, 0x00	; 0
    1d18:	80 91 6d 00 	lds	r24, 0x006D
    1d1c:	80 83       	st	Z, r24
    1d1e:	80 e0       	ldi	r24, 0x00	; 0
    1d20:	90 e0       	ldi	r25, 0x00	; 0
    1d22:	a0 e8       	ldi	r26, 0x80	; 128
    1d24:	bf e3       	ldi	r27, 0x3F	; 63
    1d26:	8b 87       	std	Y+11, r24	; 0x0b
    1d28:	9c 87       	std	Y+12, r25	; 0x0c
    1d2a:	ad 87       	std	Y+13, r26	; 0x0d
    1d2c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d2e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d30:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d32:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d34:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d36:	20 e0       	ldi	r18, 0x00	; 0
    1d38:	30 e0       	ldi	r19, 0x00	; 0
    1d3a:	4a e7       	ldi	r20, 0x7A	; 122
    1d3c:	53 e4       	ldi	r21, 0x43	; 67
    1d3e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d42:	dc 01       	movw	r26, r24
    1d44:	cb 01       	movw	r24, r22
    1d46:	8f 83       	std	Y+7, r24	; 0x07
    1d48:	98 87       	std	Y+8, r25	; 0x08
    1d4a:	a9 87       	std	Y+9, r26	; 0x09
    1d4c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1d4e:	6f 81       	ldd	r22, Y+7	; 0x07
    1d50:	78 85       	ldd	r23, Y+8	; 0x08
    1d52:	89 85       	ldd	r24, Y+9	; 0x09
    1d54:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d56:	20 e0       	ldi	r18, 0x00	; 0
    1d58:	30 e0       	ldi	r19, 0x00	; 0
    1d5a:	40 e8       	ldi	r20, 0x80	; 128
    1d5c:	5f e3       	ldi	r21, 0x3F	; 63
    1d5e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1d62:	88 23       	and	r24, r24
    1d64:	2c f4       	brge	.+10     	; 0x1d70 <main+0xfde>
		__ticks = 1;
    1d66:	81 e0       	ldi	r24, 0x01	; 1
    1d68:	90 e0       	ldi	r25, 0x00	; 0
    1d6a:	9e 83       	std	Y+6, r25	; 0x06
    1d6c:	8d 83       	std	Y+5, r24	; 0x05
    1d6e:	3f c0       	rjmp	.+126    	; 0x1dee <main+0x105c>
	else if (__tmp > 65535)
    1d70:	6f 81       	ldd	r22, Y+7	; 0x07
    1d72:	78 85       	ldd	r23, Y+8	; 0x08
    1d74:	89 85       	ldd	r24, Y+9	; 0x09
    1d76:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d78:	20 e0       	ldi	r18, 0x00	; 0
    1d7a:	3f ef       	ldi	r19, 0xFF	; 255
    1d7c:	4f e7       	ldi	r20, 0x7F	; 127
    1d7e:	57 e4       	ldi	r21, 0x47	; 71
    1d80:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1d84:	18 16       	cp	r1, r24
    1d86:	4c f5       	brge	.+82     	; 0x1dda <main+0x1048>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d88:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d8a:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d8c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d8e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d90:	20 e0       	ldi	r18, 0x00	; 0
    1d92:	30 e0       	ldi	r19, 0x00	; 0
    1d94:	40 e2       	ldi	r20, 0x20	; 32
    1d96:	51 e4       	ldi	r21, 0x41	; 65
    1d98:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d9c:	dc 01       	movw	r26, r24
    1d9e:	cb 01       	movw	r24, r22
    1da0:	bc 01       	movw	r22, r24
    1da2:	cd 01       	movw	r24, r26
    1da4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1da8:	dc 01       	movw	r26, r24
    1daa:	cb 01       	movw	r24, r22
    1dac:	9e 83       	std	Y+6, r25	; 0x06
    1dae:	8d 83       	std	Y+5, r24	; 0x05
    1db0:	0f c0       	rjmp	.+30     	; 0x1dd0 <main+0x103e>
    1db2:	89 e1       	ldi	r24, 0x19	; 25
    1db4:	90 e0       	ldi	r25, 0x00	; 0
    1db6:	9c 83       	std	Y+4, r25	; 0x04
    1db8:	8b 83       	std	Y+3, r24	; 0x03
    1dba:	8b 81       	ldd	r24, Y+3	; 0x03
    1dbc:	9c 81       	ldd	r25, Y+4	; 0x04
    1dbe:	01 97       	sbiw	r24, 0x01	; 1
    1dc0:	f1 f7       	brne	.-4      	; 0x1dbe <main+0x102c>
    1dc2:	9c 83       	std	Y+4, r25	; 0x04
    1dc4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dc6:	8d 81       	ldd	r24, Y+5	; 0x05
    1dc8:	9e 81       	ldd	r25, Y+6	; 0x06
    1dca:	01 97       	sbiw	r24, 0x01	; 1
    1dcc:	9e 83       	std	Y+6, r25	; 0x06
    1dce:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1dd0:	8d 81       	ldd	r24, Y+5	; 0x05
    1dd2:	9e 81       	ldd	r25, Y+6	; 0x06
    1dd4:	00 97       	sbiw	r24, 0x00	; 0
    1dd6:	69 f7       	brne	.-38     	; 0x1db2 <main+0x1020>
    1dd8:	14 c0       	rjmp	.+40     	; 0x1e02 <main+0x1070>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1dda:	6f 81       	ldd	r22, Y+7	; 0x07
    1ddc:	78 85       	ldd	r23, Y+8	; 0x08
    1dde:	89 85       	ldd	r24, Y+9	; 0x09
    1de0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1de2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1de6:	dc 01       	movw	r26, r24
    1de8:	cb 01       	movw	r24, r22
    1dea:	9e 83       	std	Y+6, r25	; 0x06
    1dec:	8d 83       	std	Y+5, r24	; 0x05
    1dee:	8d 81       	ldd	r24, Y+5	; 0x05
    1df0:	9e 81       	ldd	r25, Y+6	; 0x06
    1df2:	9a 83       	std	Y+2, r25	; 0x02
    1df4:	89 83       	std	Y+1, r24	; 0x01
    1df6:	89 81       	ldd	r24, Y+1	; 0x01
    1df8:	9a 81       	ldd	r25, Y+2	; 0x02
    1dfa:	01 97       	sbiw	r24, 0x01	; 1
    1dfc:	f1 f7       	brne	.-4      	; 0x1dfa <main+0x1068>
    1dfe:	9a 83       	std	Y+2, r25	; 0x02
    1e00:	89 83       	std	Y+1, r24	; 0x01
     	    	_delay_ms(1);
     	    	if(flagresume==1)
    1e02:	80 91 70 00 	lds	r24, 0x0070
    1e06:	81 30       	cpi	r24, 0x01	; 1
    1e08:	21 f4       	brne	.+8      	; 0x1e12 <main+0x1080>
     	    	{
     	    		flagpause=0;
    1e0a:	10 92 6f 00 	sts	0x006F, r1
     	    		flagresume=0;
    1e0e:	10 92 70 00 	sts	0x0070, r1
   		    	PORTA=0x20;
   		    	PORTC=hourcounter2;
   		    	_delay_ms(1);
    	}

    	while (flagpause==1)
    1e12:	80 91 6f 00 	lds	r24, 0x006F
    1e16:	81 30       	cpi	r24, 0x01	; 1
    1e18:	09 f4       	brne	.+2      	; 0x1e1c <main+0x108a>
    1e1a:	bd cc       	rjmp	.-1670   	; 0x1796 <main+0xa04>
    1e1c:	0c 94 fe 06 	jmp	0xdfc	; 0xdfc <main+0x6a>

00001e20 <__prologue_saves__>:
    1e20:	2f 92       	push	r2
    1e22:	3f 92       	push	r3
    1e24:	4f 92       	push	r4
    1e26:	5f 92       	push	r5
    1e28:	6f 92       	push	r6
    1e2a:	7f 92       	push	r7
    1e2c:	8f 92       	push	r8
    1e2e:	9f 92       	push	r9
    1e30:	af 92       	push	r10
    1e32:	bf 92       	push	r11
    1e34:	cf 92       	push	r12
    1e36:	df 92       	push	r13
    1e38:	ef 92       	push	r14
    1e3a:	ff 92       	push	r15
    1e3c:	0f 93       	push	r16
    1e3e:	1f 93       	push	r17
    1e40:	cf 93       	push	r28
    1e42:	df 93       	push	r29
    1e44:	cd b7       	in	r28, 0x3d	; 61
    1e46:	de b7       	in	r29, 0x3e	; 62
    1e48:	ca 1b       	sub	r28, r26
    1e4a:	db 0b       	sbc	r29, r27
    1e4c:	0f b6       	in	r0, 0x3f	; 63
    1e4e:	f8 94       	cli
    1e50:	de bf       	out	0x3e, r29	; 62
    1e52:	0f be       	out	0x3f, r0	; 63
    1e54:	cd bf       	out	0x3d, r28	; 61
    1e56:	09 94       	ijmp

00001e58 <__epilogue_restores__>:
    1e58:	2a 88       	ldd	r2, Y+18	; 0x12
    1e5a:	39 88       	ldd	r3, Y+17	; 0x11
    1e5c:	48 88       	ldd	r4, Y+16	; 0x10
    1e5e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1e60:	6e 84       	ldd	r6, Y+14	; 0x0e
    1e62:	7d 84       	ldd	r7, Y+13	; 0x0d
    1e64:	8c 84       	ldd	r8, Y+12	; 0x0c
    1e66:	9b 84       	ldd	r9, Y+11	; 0x0b
    1e68:	aa 84       	ldd	r10, Y+10	; 0x0a
    1e6a:	b9 84       	ldd	r11, Y+9	; 0x09
    1e6c:	c8 84       	ldd	r12, Y+8	; 0x08
    1e6e:	df 80       	ldd	r13, Y+7	; 0x07
    1e70:	ee 80       	ldd	r14, Y+6	; 0x06
    1e72:	fd 80       	ldd	r15, Y+5	; 0x05
    1e74:	0c 81       	ldd	r16, Y+4	; 0x04
    1e76:	1b 81       	ldd	r17, Y+3	; 0x03
    1e78:	aa 81       	ldd	r26, Y+2	; 0x02
    1e7a:	b9 81       	ldd	r27, Y+1	; 0x01
    1e7c:	ce 0f       	add	r28, r30
    1e7e:	d1 1d       	adc	r29, r1
    1e80:	0f b6       	in	r0, 0x3f	; 63
    1e82:	f8 94       	cli
    1e84:	de bf       	out	0x3e, r29	; 62
    1e86:	0f be       	out	0x3f, r0	; 63
    1e88:	cd bf       	out	0x3d, r28	; 61
    1e8a:	ed 01       	movw	r28, r26
    1e8c:	08 95       	ret

00001e8e <_exit>:
    1e8e:	f8 94       	cli

00001e90 <__stop_program>:
    1e90:	ff cf       	rjmp	.-2      	; 0x1e90 <__stop_program>
