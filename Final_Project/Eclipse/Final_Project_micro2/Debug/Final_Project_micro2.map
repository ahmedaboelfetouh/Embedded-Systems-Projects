Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              ./uart.o (__udivmodsi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./appmc2.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
LOAD ./DCMotor.o
LOAD ./appmc2.o
LOAD ./buzzer.o
LOAD ./external_eeprom.o
LOAD ./gpio.o
LOAD ./timer0.o
LOAD ./twi.o
LOAD ./uart.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x121a
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000060                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000070        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x00000078        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000078                __vector_1
                0x00000078                __vector_12
                0x00000078                __bad_interrupt
                0x00000078                __vector_6
                0x00000078                __vector_3
                0x00000078                __vector_11
                0x00000078                __vector_13
                0x00000078                __vector_17
                0x00000078                __vector_7
                0x00000078                __vector_5
                0x00000078                __vector_4
                0x00000078                __vector_2
                0x00000078                __vector_15
                0x00000078                __vector_8
                0x00000078                __vector_14
                0x00000078                __vector_10
                0x00000078                __vector_16
                0x00000078                __vector_18
                0x00000078                __vector_20
 .text          0x0000007c        0x0 ./DCMotor.o
 .text          0x0000007c        0x0 ./appmc2.o
 .text          0x0000007c        0x0 ./buzzer.o
 .text          0x0000007c        0x0 ./external_eeprom.o
 .text          0x0000007c        0x0 ./gpio.o
 .text          0x0000007c        0x0 ./timer0.o
 .text          0x0000007c        0x0 ./twi.o
 .text          0x0000007c        0x0 ./uart.o
 .text          0x0000007c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x0000007c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x0000007c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x0000007c                . = ALIGN (0x2)
 *(.text.*)
 .text.DcMotor_Init
                0x0000007c       0x4a ./DCMotor.o
                0x0000007c                DcMotor_Init
 .text.DcMotor_Rotate
                0x000000c6       0x92 ./DCMotor.o
                0x000000c6                DcMotor_Rotate
 .text.main     0x00000158       0xb4 ./appmc2.o
                0x00000158                main
 .text.get_new_password
                0x0000020c       0x92 ./appmc2.o
                0x0000020c                get_new_password
 .text.check_password
                0x0000029e       0xa6 ./appmc2.o
                0x0000029e                check_password
 .text.open_motor
                0x00000344       0x52 ./appmc2.o
                0x00000344                open_motor
 .text.delay    0x00000396       0x18 ./appmc2.o
                0x00000396                delay
 .text.delay_timer0_normal_mode
                0x000003ae       0x6e ./appmc2.o
                0x000003ae                delay_timer0_normal_mode
 .text.buzzer_init
                0x0000041c       0x22 ./buzzer.o
                0x0000041c                buzzer_init
 .text.buzzer_on
                0x0000043e       0x18 ./buzzer.o
                0x0000043e                buzzer_on
 .text.buzzer_off
                0x00000456       0x18 ./buzzer.o
                0x00000456                buzzer_off
 .text.EEPROM_writeByte
                0x0000046e       0x82 ./external_eeprom.o
                0x0000046e                EEPROM_writeByte
 .text.EEPROM_readByte
                0x000004f0       0xc0 ./external_eeprom.o
                0x000004f0                EEPROM_readByte
 .text.GPIO_setupPinDirection
                0x000005b0      0x1d6 ./gpio.o
                0x000005b0                GPIO_setupPinDirection
 .text.GPIO_writePin
                0x00000786      0x1d6 ./gpio.o
                0x00000786                GPIO_writePin
 .text.GPIO_readPin
                0x0000095c      0x136 ./gpio.o
                0x0000095c                GPIO_readPin
 .text.GPIO_setupPortDirection
                0x00000a92       0x88 ./gpio.o
                0x00000a92                GPIO_setupPortDirection
 .text.GPIO_writePort
                0x00000b1a       0x88 ./gpio.o
                0x00000b1a                GPIO_writePort
 .text.GPIO_readPort
                0x00000ba2       0x8a ./gpio.o
                0x00000ba2                GPIO_readPort
 .text.__vector_9
                0x00000c2c       0x66 ./timer0.o
                0x00000c2c                __vector_9
 .text.__vector_19
                0x00000c92       0x66 ./timer0.o
                0x00000c92                __vector_19
 .text.timer0_init
                0x00000cf8      0x108 ./timer0.o
                0x00000cf8                timer0_init
 .text.timer0_setCallBack_normal_mode
                0x00000e00       0x24 ./timer0.o
                0x00000e00                timer0_setCallBack_normal_mode
 .text.timer0_setCallBack_CTC_mode
                0x00000e24       0x24 ./timer0.o
                0x00000e24                timer0_setCallBack_CTC_mode
 .text.timer0_de_init
                0x00000e48       0x14 ./timer0.o
                0x00000e48                timer0_de_init
 .text.TWI_init
                0x00000e5c       0x44 ./twi.o
                0x00000e5c                TWI_init
 .text.TWI_start
                0x00000ea0       0x20 ./twi.o
                0x00000ea0                TWI_start
 .text.TWI_stop
                0x00000ec0       0x16 ./twi.o
                0x00000ec0                TWI_stop
 .text.TWI_writeByte
                0x00000ed6       0x2e ./twi.o
                0x00000ed6                TWI_writeByte
 .text.TWI_readByteWithACK
                0x00000f04       0x26 ./twi.o
                0x00000f04                TWI_readByteWithACK
 .text.TWI_readByteWithNACK
                0x00000f2a       0x26 ./twi.o
                0x00000f2a                TWI_readByteWithNACK
 .text.TWI_getStatus
                0x00000f50       0x1e ./twi.o
                0x00000f50                TWI_getStatus
 .text.UART_init
                0x00000f6e      0x140 ./uart.o
                0x00000f6e                UART_init
 .text.UART_sendByte
                0x000010ae       0x2e ./uart.o
                0x000010ae                UART_sendByte
 .text.UART_recieveByte
                0x000010dc       0x1e ./uart.o
                0x000010dc                UART_recieveByte
 .text.UART_sendString
                0x000010fa       0x52 ./uart.o
                0x000010fa                UART_sendString
 .text.UART_receiveString
                0x0000114c       0x86 ./uart.o
                0x0000114c                UART_receiveString
 .text.libgcc   0x000011d2       0x44 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x000011d2                __udivmodsi4
 .text.libgcc   0x00001216        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00001216        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00001216                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001216        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00001216                exit
                0x00001216                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001216        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x0000121a                _etext = .

.data           0x00800060        0x0 load address 0x0000121a
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .data          0x00800060        0x0 ./DCMotor.o
 .data          0x00800060        0x0 ./appmc2.o
 .data          0x00800060        0x0 ./buzzer.o
 .data          0x00800060        0x0 ./external_eeprom.o
 .data          0x00800060        0x0 ./gpio.o
 .data          0x00800060        0x0 ./timer0.o
 .data          0x00800060        0x0 ./twi.o
 .data          0x00800060        0x0 ./uart.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x7
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .bss           0x00800060        0x0 ./DCMotor.o
 .bss           0x00800060        0x0 ./appmc2.o
 .bss           0x00800060        0x0 ./buzzer.o
 .bss           0x00800060        0x0 ./external_eeprom.o
 .bss           0x00800060        0x0 ./gpio.o
 .bss           0x00800060        0x0 ./timer0.o
 .bss           0x00800060        0x0 ./twi.o
 .bss           0x00800060        0x0 ./uart.o
 .bss           0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.g_tick    0x00800060        0x1 ./appmc2.o
                0x00800060                g_tick
 .bss.buzzer_count
                0x00800061        0x1 ./appmc2.o
                0x00800061                buzzer_count
 .bss.first_flag
                0x00800062        0x1 ./appmc2.o
                0x00800062                first_flag
 .bss.g_callBackPtr_ISR_Normal_Mode
                0x00800063        0x2 ./timer0.o
 .bss.g_callBackPtr_ISR_CTC_MOde
                0x00800065        0x2 ./timer0.o
 *(COMMON)
                0x00800067                PROVIDE (__bss_end, .)
                0x0000121a                __data_load_start = LOADADDR (.data)
                0x0000121a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800067        0x0
                0x00800067                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800067                PROVIDE (__noinit_end, .)
                0x00800067                _end = .
                0x00800067                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1fb0
 *(.stab)
 .stab          0x00000000      0x51c ./DCMotor.o
 .stab          0x0000051c      0x60c ./appmc2.o
                                0x6a8 (size before relaxing)
 .stab          0x00000b28      0x18c ./buzzer.o
                                0x264 (size before relaxing)
 .stab          0x00000cb4      0x318 ./external_eeprom.o
                                0x3cc (size before relaxing)
 .stab          0x00000fcc      0x5e8 ./gpio.o
                                0x870 (size before relaxing)
 .stab          0x000015b4      0x348 ./timer0.o
                                0x5ac (size before relaxing)
 .stab          0x000018fc      0x33c ./twi.o
                                0x5a0 (size before relaxing)
 .stab          0x00001c38      0x378 ./uart.o
                                0x5dc (size before relaxing)

.stabstr        0x00000000     0x1035
 *(.stabstr)
 .stabstr       0x00000000     0x1035 ./DCMotor.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Final_Project_micro2.elf elf32-avr)
LOAD linker stubs
